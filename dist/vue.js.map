{"version":3,"file":"vue.js","sources":["../src/utils/index.js","../src/global-api/index.js","../src/compile/generate.js","../src/compile/parseAst.js","../src/compile/index.js","../src/observe/arr.js","../src/observe/dep.js","../src/observe/index.js","../src/initState.js","../src/vnode/patch.js","../src/observe/watcher.js","../src/lifecycle.js","../src/init.js","../src/vnode/index.js","../src/index.js"],"sourcesContent":["//对象合并 {created:[]}\r\nexport const HOOKS =[\r\n    \"beforeCreated\",\r\n    \"created\",\r\n    \"beforeMount\",\r\n    \"mounted\",\r\n    \"beforeUpdate\",\r\n    \"updated\",\r\n    \"beforeDestory\",\r\n    \"destroyed\",\r\n]\r\n// 策略模式\r\nlet starts ={}\r\nstarts.data =function(parentVal,childVal){\r\n    return childVal\r\n} //合并data\r\nstarts.computed =function(){} //合并computed\r\nstarts.watch =function(){} //合并watch\r\nstarts.methods =function(){} //合并methods\r\n//遍历生命周期\r\nHOOKS.forEach(hooks=>{\r\n    //是不是傻了?这里是传方法,不是调方法\r\n    starts[hooks] = mergeHook\r\n    // console.log(starts,)\r\n})\r\n\r\nfunction mergeHook(parentVal,childVal){\r\n    if(childVal){\r\n        if(parentVal){\r\n            //把子元素合并进去\r\n            return parentVal.concat(childVal)\r\n        }else{\r\n            return [childVal] //[a]\r\n        }\r\n    }else{\r\n        return parentVal\r\n    }\r\n}\r\n\r\nexport function mergeOptions(parent, child) {\r\n    // console.log(parent,child,'||this is parent and child in mergeOptions()')\r\n    const options ={}\r\n    //判断父亲\r\n    for(let key in parent){\r\n        // console.log(key,'||this is key')\r\n        mergeField(key)\r\n    }\r\n    //判断儿子\r\n    for(let key in child){\r\n        // console.log(key,'||this is key')\r\n        mergeField(key)\r\n    }\r\n    function mergeField(key){\r\n        //根据key 策略模式\r\n        if(starts[key]){ //created {created:[a]}\r\n            options[key] =starts[key](parent[key],child[key])\r\n        }else{\r\n            options[key] = child[key]\r\n        }\r\n    }\r\n    return options\r\n}","import { mergeOptions } from \"../utils/index\"\r\n\r\nexport function initGlobApi(Vue) {\r\n    //源码\r\n    //Vue.options ={created:[a,b,c],watch:{a,b}}\r\n    Vue.options ={}\r\n    Vue.Mixin = function (mixin) { // {}\r\n        //源码\r\n        //{created:[a,b,c],watch:[a,b]}\r\n        //对象的合并\r\n        // console.log(999)\r\n        this.options = mergeOptions(this.options,mixin)\r\n        // console.log(Vue.options,\"||this is vue.options\")\r\n\r\n    }\r\n}","/**\r\n * <div id=\"app\">Hello{{msg}}</div>\r\n * \r\n * _c 解析标签\r\n * _v 解析字符串\r\n * \r\n * render(){\r\n *  return _c('div',{id:app},_v('hello'+_s(msg)),_c)\r\n * }\r\n *  \r\n */\r\n//处理属性\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n//genPorps()方法解析属性\r\nfunction genPorps(attrs) {\r\n    // console.log(attrs)\r\n    let str = '';\r\n    //对象\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        if (attr.name === 'style') { // \r\n            let obj = {}\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, val] = item.split(':')\r\n                // console.log(key, val, \"//this is [key,val]\")\r\n                obj[key] = val\r\n            })\r\n            attr.value = obj\r\n        }\r\n        //拼接\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n        // console.log(str, '|this is str')\r\n        // console.log(`{${str.slice(0,-1)}}`)\r\n    }\r\n    //首字符到倒数第二个字符,即去掉标点符号\r\n    return `{${str.slice(0,-1)}}`\r\n}\r\n\r\n//处理子节点\r\nfunction genChildren(el) {\r\n    let children = el.children //获取元素节点的子节点\r\n    //如果存在子节点，则递归调用 gen() 函数处理每个子节点，并用逗号拼接子节点的代码。\r\n    if (children) {\r\n        //返回子节点代码的字符串。\r\n        return children.map(child => gen(child)).join(',')\r\n    }\r\n}\r\n//\r\nfunction gen(node) { //1.元素  2.div  tip:_v表示文本\r\n    // console.log(node, \"this is node\")\r\n    //如果节点是元素节点，递归调用 generate() 函数处理该节点，并返回结果。\r\n    if (node.type === 1) {\r\n        return generate(node)\r\n    } else { //文本 \r\n        //(1) 只是文本 hello  (2){{}}\r\n        let text = node.text //获取文本\r\n        //转化\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        }\r\n        //(2)带插值表达式{{}}\r\n        //文本包含插值表达式，使用正则表达式 defaultTagRE \r\n        //查找所有 {{}} 形式的插值表达式，并解析成可执行的代码片段。\r\n        let tokens = []\r\n        //lastIndex 需要清零 否则test匹配会失败\r\n        let lastindex = defaultTagRE.lastIndex = 0\r\n        //match保存获取结果\r\n        let match\r\n        while (match = defaultTagRE.exec(text)) {\r\n            // console.log(match, \"|this is match\")\r\n            let index = match.index\r\n            if (index > lastindex) {\r\n                tokens.push(JSON.stringify(text.slice(lastindex, index))) //内容\r\n            }\r\n            tokens.push(`_s(${match[1].trim()})`)\r\n            //lastindex处理文本长度\r\n            lastindex = index + match[0].length\r\n        }\r\n        //此处if用于处理`Hello{{msg}} xxx`中的xxx\r\n        if (lastindex < text.slice(lastindex)) {\r\n            tokens.push(JSON.stringify(text.slice(lastindex, index))) //内容\r\n        }\r\n        return `_v(${tokens.join('+')})`\r\n    }\r\n}\r\n\r\nexport function generate(el) {\r\n    // console.log(el,'|this is el')\r\n    let children = genChildren(el)\r\n    // console.log(children, \"|this is children\")\r\n    let code = `_c('${el.tag}',${el.attrs.length?`${genPorps(el.attrs)}`:'undefined'},${\r\n        children?`${children}`:''\r\n    })`\r\n    // console.log(code, '|this is code')\r\n    return code\r\n}","//ast语法树 {}    vnode {}\r\n\r\n/**\r\n * {\r\n * tag:'div'\r\n * attrs:[{id:\"app\"}]\r\n * children:[{}]\r\n * }\r\n * \r\n * \r\n * \r\n */\r\n\r\n//将真实节点变为ast语法树\r\n\r\n//遍历\r\n//从源码处偷过来的正则表达式\r\nconst attribute =\r\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\n//属性 例如:  {id=app}\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; //标签名称\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})` //<span:xx>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) //标签开头\r\nconst startTagClose = /^\\s*(\\/?)>/ //匹配结束标签 的 >\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) //结束标签 例如</div>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\nlet root; //根元素\r\nlet createParent //当前元素的父亲\r\nlet stack = [] \r\nfunction createASTElement(tag, attrs) {\r\n    return {\r\n        tag,\r\n        attrs,\r\n        children: [],\r\n        type: 1,\r\n        parent: null\r\n    }\r\n}\r\n\r\nfunction start(tag, attrs) { //开始标签\r\n    let element = createASTElement(tag, attrs) //生成一个开始标签元素\r\n    //查看root根元素是否为空\r\n    //若是,将该元素作为根\r\n    //非原则\r\n    if (!root) {\r\n        root = element\r\n    }\r\n    createParent = element\r\n    stack.push(element)\r\n    // console.log(tag, attrs, '开始的标签')\r\n}\r\n\r\nfunction charts(text) { //获取文本\r\n    // console.log(text, '文本')\r\n    text = text.replace(/\\s/g,'')\r\n    if(text){\r\n        createParent.children.push({\r\n            type:3,\r\n            text\r\n        })\r\n    }\r\n    // console.log(stack,'stack')\r\n}\r\n\r\nfunction end(tag) { //结束的标签\r\n    let element = stack.pop()\r\n    createParent = stack[stack.length - 1]\r\n    if (createParent) { //元素闭合\r\n        element.parent = createParent.tag\r\n        createParent.children.push(element)\r\n    }\r\n    // console.log(tag, '结束标签')\r\n}\r\n\r\nexport function parseHTML(html) {\r\n    while (html) { //html 为空时,结束\r\n        //判断标签 <>\r\n        let textEnd = html.indexOf('<') //0\r\n        // console.log(html,textEnd,'this is textEnd')\r\n        if (textEnd === 0) { //标签\r\n            // (1) 开始标签\r\n            const startTagMatch = parseStartTag() //开始标签的内容{}\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            // console.log(endTagMatch, '结束标签')\r\n            //结束标签\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n        }\r\n        let text\r\n        //文本\r\n        if (textEnd > 0) {\r\n            // console.log(textEnd)\r\n            //获取文本内容\r\n            text = html.substring(0, textEnd)\r\n            // console.log(text)\r\n        }\r\n        if (text) {\r\n            advance(text.length)\r\n            charts(text)\r\n            // console.log(html)\r\n        }\r\n    }\r\n    function parseStartTag() {\r\n        //\r\n        const start = html.match(startTagOpen) // 1结果 2false\r\n        // console.log(start,'this is start')\r\n        // match() 方法检索字符串与正则表达式进行匹配的结果\r\n        // console.log(start)\r\n        //创建ast 语法树\r\n        if (start) {\r\n            let match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            // console.log(match,'match match')\r\n            //删除 开始标签\r\n            advance(start[0].length)\r\n            //属性\r\n            //注意 多个 遍历\r\n            //注意>\r\n            let attr //属性 \r\n            let end //结束标签\r\n            //attr=html.match(attribute)用于匹配\r\n            //非结束位'>',且有属性存在\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // console.log(attr,'attr attr'); //{}\r\n                // console.log(end,'end end')\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5]\r\n                })\r\n                advance(attr[0].length)\r\n                //匹配完后,就进行删除操作\r\n            }\r\n            //end里面有东西了(只能是有\">\"),那么将其删除\r\n            if (end) {\r\n                // console.log(end)\r\n                advance(end[0].length)\r\n                return match\r\n            }\r\n        }\r\n    }\r\n    function advance(n) {\r\n        // console.log(html)\r\n        // console.log(n)\r\n        html = html.substring(n)\r\n        // substring() 方法返回一个字符串在开始索引到结束索引之间的一个子集，\r\n        // 或从开始索引直到字符串的末尾的一个子集。\r\n        // console.log(html)\r\n    }\r\n    // console.log(root)\r\n    return root \r\n}","import { generate } from \"./generate\"\r\nimport { parseHTML } from \"./parseAst\"\r\n\r\nexport function compileToFunction(el) {\r\n\r\n    //1. 将html元素变为ast语法树\r\n    let ast = parseHTML(el)\r\n    //2. ast语法树变成render函数\r\n    //(1) ast语法树变成字符串\r\n    //(2) 字符串变成函数\r\n    let code = generate(ast) // _c _v _s\r\n    // console.log(code)\r\n    //3.将render字符串变成函数\r\n    let render = new Function(`with(this){return ${code}}`)\r\n    // console.log(render,'this is render')\r\n    return render\r\n}\r\n\r\n/**\r\n * <div id=\"app\">Hello{{msg}}</div>\r\n * \r\n * _c 解析标签\r\n * _v 解析字符串\r\n * \r\n * render(){\r\n *  return _c('div',{id:app},_v('hello'+_s(msg)),_c)\r\n * }\r\n *  \r\n */ ","let oldArrayProtoMethods = Array.prototype\r\n\r\nexport let ArrayMethods = Object.create(oldArrayProtoMethods)\r\n\r\nlet methods = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"unshift\",\r\n    \"shift\",\r\n    \"splice\"\r\n]\r\n\r\nmethods.forEach(item => {\r\n    ArrayMethods[item] = function (...args) {\r\n        // console.log(args)\r\n        let result = oldArrayProtoMethods[item].apply(this, args)\r\n        // console.log(args) //[{b:6}]\r\n        //问题:数组追加对象的情况\r\n        let inserted;\r\n        switch (item) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':\r\n                inserted = args.splice(2);\r\n                break;\r\n        }\r\n        // console.log(inserted)\r\n        let ob = this.__ob__ //\r\n        if (inserted) {\r\n            ob.observeArray(inserted)\r\n            //对添加的对象进行劫持\r\n        }\r\n        ob.dep.notify()\r\n        return result\r\n    }\r\n})\r\n\r\n// 当我们调用该方法时，可以传入多个参数，并且这些参数将会被传递给 oldArrayProtoMethods[item] 中对应的方法进行处理。让我们以一个简单的例子来说明这个过程：\r\n\r\n// 假设 methods 数组中有一个元素为 'push'，即 methods = ['push']。代码会将 push 方法添加到 ArrayMethods 对象中，并创建一个相应的函数，这个函数实际上是 oldArrayProtoMethods.push 的包装函数。\r\n\r\n// 当我们调用 ArrayMethods.push(1, 2, 3) 时，这里的参数 1, 2, 3 将会作为 args 的值，被传递给这个函数。在函数中，我们可以通过 console.log(args) 来打印参数，这将会输出 [1, 2, 3]。\r\n\r\n// 接下来，我们调用 oldArrayProtoMethods.push.apply(this, args)，这里的 this 表示当前的上下文。apply 方法将会把 args 数组解包成独立的参数，并传递给 oldArrayProtoMethods.push 方法。因此，我们实际上是调用了 oldArrayProtoMethods.push(1, 2, 3)。\r\n\r\n// 最后，在包装函数中，将会返回 oldArrayProtoMethods.push 方法的返回值。\r\n\r\n// 所以，args 的作用是接收传入的参数，并将其传递给原始方法进行处理。这样就实现了在调用 ArrayMethods 对象的方法时，会先将参数打印出来，并将这些参数传递给原始的方法进行处理的功能。","let id = 0\r\nclass Dep{\r\n    constructor(){\r\n        this.id = id++\r\n        this.subs = []\r\n    }\r\n    //收集watcher\r\n    depend(){\r\n        //我希望watcher可以存放dep\r\n        //双向记忆\r\n        Dep.target.addDep(this)\r\n    }\r\n    addSub(watcher){\r\n        this.subs.push(watcher)\r\n    }\r\n    //更新watcher\r\n    notify(){\r\n        this.subs.forEach(watcher =>{\r\n            watcher.updata()\r\n        })\r\n    }\r\n}\r\n\r\n//添加watcher\r\nDep.target = null\r\nexport function pushTarget(watcher){\r\n    Dep.target = watcher\r\n}\r\nexport function popTarget(){\r\n    Dep.target = null\r\n}\r\nexport default Dep\r\n","import {\r\n    ArrayMethods\r\n} from \"./arr\"\r\nimport Dep from './dep'\r\nexport function observer(data) {\r\n    // console.log(data)\r\n\r\n    //判断数据\r\n    if (typeof data != 'object' || data == null) {\r\n        return data\r\n    }\r\n    //对象通过一个类\r\n    return new Observer(data)\r\n}\r\n\r\nclass Observer {\r\n    constructor(value) {\r\n        Object.defineProperty(value, \"__ob__\", {\r\n            enumerable: false,\r\n            configurable: true,\r\n            value: this\r\n        })\r\n        // console.log(value,\"this is value\")\r\n        this.dep =new Dep() //1.给所有对象类型增加一个dep []\r\n        //判断数据\r\n        // console.log(value)\r\n        if (Array.isArray(value)) {\r\n            value.__proto__ = ArrayMethods\r\n            // console.log(\"shuzhu\")\r\n            //如果你是数组对象\r\n            this.observeArray(value)\r\n        } else {\r\n            this.walk(value)\r\n        }\r\n        // console.log(this.dep)\r\n    }\r\n    walk(data) {\r\n        let keys = Object.keys(data)\r\n        for (let i = 0; i < keys.length; i++) {\r\n\r\n            //对象我们的每个属性进行劫持\r\n            let key = keys[i]\r\n            let value = data[key]\r\n            // console.log(data,\"||data\")\r\n            // console.log(key,\"||key\")\r\n            // console.log(value,\"||value\")\r\n            defineReactive(data, key, value)\r\n        }\r\n\r\n    }\r\n    observeArray(value) { //[{a:1}]\r\n        for (let i = 0; i < value.length; i++) {\r\n            observer(value[i])\r\n        }\r\n    }\r\n}\r\n//对对象中的属性进行劫持\r\nfunction defineReactive(data, key, value) {\r\n    let childDep = observer(value) //深度代理\r\n    // console.log(childDep)\r\n    let dep = new Dep() //给每一个对象添加dep\r\n    Object.defineProperty(data, key, {\r\n        get() {\r\n            // console.log('获取')\r\n            // console.log(Dep,\"||this is Dep\")\r\n            // console.log(Dep.target,\"||this is Dep.target\")\r\n            if(Dep.target){\r\n                // console.log(\"dep.depend()被触发\")\r\n                dep.depend()\r\n                if(childDep.dep){\r\n                    childDep.dep.depend() //数组收集\r\n                }\r\n            }\r\n            // console.log(dep,\"||this is dep\")\r\n            return value\r\n        },\r\n        set(newValue) {\r\n            // console.log('设置')\r\n            if (newValue == value) {\r\n                return;\r\n            }\r\n            observer(newValue)\r\n            value = newValue\r\n            dep.notify()\r\n        }\r\n    })\r\n\r\n}\r\n\r\n//vue2   Object.defineProperty 缺点 对象中的一个属性\r\n\r\n//{a:{}},list[]}\r\n\r\n//数组{list:[1,2,3],arr:[{a:1}]}\r\n//ipo切片思想 \r\n// 方法函数劫持,重写数组方法 arr.push()\r\n","import { observer } from \"./observe/index.js\"\r\nexport function initState(vm){\r\n    let opts = vm.$options\r\n    // console.log(opts)\r\n    //判断\r\n    if(opts.props){\r\n        initProps()\r\n    }\r\n    if(opts.data){\r\n        initData(vm)\r\n    }\r\n    if(opts.watch){\r\n        initWatch()\r\n    }\r\n    if(opts.computed){\r\n        initComputed()\r\n    }\r\n    if(opts.methods){\r\n        initMethods()\r\n    }\r\n}\r\n\r\nfunction initComputed(){}\r\nfunction initMethods(){}\r\nfunction initProps(){}\r\nfunction initWatch(){}\r\n\r\n//vue2 对data初始化\r\nfunction initData(vm){\r\n    // console.log('data初始化') //两种情况 (1)对象 (2)函数\r\n    let data = vm.$options.data\r\n    data = vm._data =typeof data ===\"function\"?data.call(vm):data\r\n    //data数据进行劫持\r\n    //将data上的所有属性代理到实例上{a:1,b:2}\r\n    // for(let i=0;i<data.length;i++){\r\n    //     proxy(vm,\"_data\",data[i])\r\n    // }\r\n    // 另一种写法\r\n    for(let key in data){\r\n        proxy(vm,\"_data\",key)\r\n    }\r\n    // console.log(data)\r\n    // console.log(observer(data))\r\n    observer(data)\r\n}\r\n//Vue实例 , '_data','msg'\r\nfunction proxy(vm,source,key){\r\n    // console.log(vm,source,key,'fuck')\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            console.log()\r\n            return vm[source][key]\r\n        },\r\n        set(newValue){\r\n            vm[source][key] =newValue;\r\n        }\r\n    })\r\n}\r\n    //data{} (1)对象(2)数组 { a:{b:1},list:[1,2,3],arr:[{}]]}","export function patch(oldVnode,vnode){\r\n    // console.log(oldVnode,vnode)\r\n    //(1) 创建新DOM\r\n    let el = createEl(vnode)\r\n    // console.log(el)\r\n    //(2) 替换 1) 获取父节点  2)插入 3)删除\r\n    let parentEL = oldVnode.parentNode\r\n    parentEL.insertBefore(el,oldVnode.nextsibling)\r\n    parentEL.removeChild(oldVnode)\r\n    return el\r\n}\r\n\r\nfunction createEl(vnode){\r\n    //vnode 拆解\r\n    let {tag,data,key,children,text} = vnode\r\n    //判断标签是否为字符串 0:创建标签元素,递归处理子节点   1:文本节点\r\n    if(typeof tag === 'string'){\r\n        vnode.el = document.createElement(tag)\r\n        if(children.length >0){\r\n            children.forEach(child => {\r\n                //递归\r\n                vnode.el.appendChild(createEl(child))\r\n            });\r\n        }\r\n    }else{\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}","//(1) 通过这个类watcher 实现更新\r\nimport {\r\n    pushTarget,\r\n    popTarget\r\n} from \"./dep\"\r\nlet id = 0\r\nclass watcher {\r\n    //cb表示回调函数,options表示标识\r\n    constructor(vm, updataComponent, cb, options) {\r\n        //(1)将\r\n        this.vm = vm\r\n        this.exprOrfn = updataComponent\r\n        this.cb = cb\r\n        this.options = options\r\n        this.id = id++\r\n        this.deps = [] //watcher存放 dep\r\n        this.depsId = new Set()\r\n        //判断\r\n        if (typeof updataComponent === 'function') {\r\n            this.getter = updataComponent\r\n        }\r\n        //更新视图\r\n        this.get()\r\n    }\r\n    addDep(dep) {\r\n        //去重\r\n        let id = dep.id\r\n        if(!this.depsId.has(id)){\r\n            this.deps.push(dep)\r\n            this.depsId.add(id)\r\n            dep.addSub(this)\r\n        }\r\n    }\r\n    //初次渲染\r\n    run(){\r\n        this.getter()\r\n    }\r\n    get() {\r\n        // console.log(this, '||this is this')\r\n        pushTarget(this) //给dep 添加  watcher\r\n        // console.log(\"进完\")\r\n        this.getter()\r\n        // console.log(\"this.getter执行完毕\")\r\n        popTarget() //给dep 去除 watcher\r\n        // console.log(\"出完\")\r\n\r\n        \r\n    }\r\n    //更新\r\n    updata() {\r\n        // this.getter()\r\n        //注意:不在数据更新后每次都调用get方法,get方法会重新渲染\r\n        //缓存\r\n        queueWatcher(this)\r\n    }\r\n}\r\n\r\nlet queue = [] // 将需要批量更新的watcher 存放到一个列队中\r\nlet has = {}\r\nlet pending = false\r\n\r\nfunction queueWatcher(watcher) {\r\n    let id = watcher.id // 每个组件都是同一个 watcher\r\n    //    console.log(id) //去重\r\n    if (has[id] == null) {//去重\r\n        //列队处理\r\n        queue.push(watcher)//将wacher 添加到列队中\r\n        has[id] = true\r\n        //防抖 ：用户触发多次，只触发一个 异步，同步\r\n        if (!pending) {\r\n            //异步：等待同步代码执行完毕之后，再执行\r\n            setTimeout(()=>{\r\n              queue.forEach(item=>item.run())\r\n              queue = []\r\n              has = {}\r\n              pending = false\r\n            },0)\r\n            // nextTick(flushWatcher) //  nextTick相当于定时器\r\n        }\r\n        pending = true\r\n    }\r\n}\r\n\r\nexport default watcher\r\n\r\n//收集依赖 vue dep watcher data:{name,msg}\r\n//dep:dep 和 data 中的属性是一一对应\r\n//watcher:监视的数据有多少个,就对应有多少个watcher\r\n//dep与watcher: 一对多 dep.name = [w1,w2]\r\n\r\n\r\n//实现对象的收集依赖","import {\r\n    patch\r\n} from \"./vnode/patch\"\r\n\r\nimport watcher from \"./observe/watcher\"\r\n\r\nexport function mounetComponent(vm, el) {\r\n    //源码\r\n    callHook(vm, \"beforeMounted\")\r\n    //(1)vm._render() 将 render函数变成vnode\r\n    //(2)vm.updata()将vnode变成真实dom\r\n    let updataComponent = () => {\r\n        vm._updata(vm._render())\r\n    }\r\n    new watcher(vm, updataComponent,()=>{},true)\r\n    callHook(vm, \"mounted\")\r\n}\r\n\r\nexport function lifecycleMixin(Vue) {\r\n    Vue.prototype._updata = function (vnode) {\r\n        // console.log(vnode)\r\n        let vm = this\r\n        //两个参数 ()\r\n        vm.$el = patch(vm.$el, vnode)\r\n        // console.log(vm.$el, \"||this is vm.$el\")\r\n    }\r\n}\r\n\r\n//(1) render()函数 =>vnode =>真实dom \r\n\r\n//生命周期调用\r\nexport function callHook(vm, hook) {\r\n    // console.log(vm.options,\"||this is vm.options\")\r\n    // console.log(hook,\"||this is hook\")\r\n    // console.log(vm.$options,\"||this is vm.$options\")\r\n    const handlers = vm.$options[hook]\r\n    if (handlers) {\r\n        for (let i = 0; i < handlers.length; i++) {\r\n            handlers[i].call(this) //改变生命周期中的指向 \r\n        }\r\n    }\r\n}","import {\r\n    compileToFunction\r\n} from \"./compile/index.js\";\r\nimport {\r\n    initState\r\n} from \"./initState\";\r\nimport {\r\n    callHook,\r\n    mounetComponent\r\n} from './lifecycle'\r\nimport {\r\n    mergeOptions\r\n} from \"./utils/index.js\";\r\n\r\n\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        // console.log(options)\r\n        let vm = this\r\n        //options为\r\n        // console.log(Vue)\r\n        // console.log(Vue.options, options)\r\n        //mergeOptions()合并方法最终得到的选项将作为Vue实例的 $options 属性，\r\n        //包含了所有经过合并的选项\r\n        vm.$options = mergeOptions(Vue.options, options)\r\n        // console.log(vm.$options)\r\n\r\n\r\n        callHook(vm,'beforeCreated')\r\n        //初始化状态\r\n        initState(vm)\r\n        callHook(vm,'created')\r\n\r\n        // 渲染模板 el\r\n        if (vm.$options.el) {\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n    //创建 $mount\r\n\r\n    Vue.prototype.$mount = function (el) {\r\n        // console.log(el)\r\n        //el template render\r\n        let vm = this\r\n        el = document.querySelector(el) //获取元素\r\n        vm.$el = el\r\n        let options = vm.$options\r\n        // console.log(vm.$options,'||this is vm.$options')\r\n        // console.log(this,'||this is this?')\r\n        if (!options.render) { //没有\r\n            let template = options.template\r\n            if (!template && el) {\r\n                //获取html\r\n                el = el.outerHTML\r\n                // console.log(el,'this is  init.js attrs:el')\r\n                //<div id=\"app\">Hello</div>\r\n                //变成ast语法树\r\n                let render = compileToFunction(el)\r\n                // console.log(render,'||this is render from compileToFunction')\r\n                //(1)render函数变为 vnode (2)vnode变成真实DOM放到页面上去\r\n                options.render = render\r\n                //\r\n\r\n            }\r\n        }\r\n        //挂载组件\r\n        mounetComponent(vm, el)\r\n    }\r\n\r\n}\r\n\r\n//ast语法树 {}    vnode {}\r\n//<div id=\"app\">Hello{{msg}}</div>\r\n/**\r\n * {\r\n * tag:'div'\r\n * attrs:[{id:\"app\"}]\r\n * children:[{tag:null,text:Hello},{tag:'div'}]\r\n * }\r\n * \r\n * \r\n * \r\n */","export function renderMixin(Vue) {\r\n    Vue.prototype._c = function () {\r\n        //创建标签\r\n        return createElement(...arguments)\r\n    }\r\n    Vue.prototype._v = function (text) { //文本\r\n        return createText(text)\r\n    }\r\n    Vue.prototype._s = function (val) {\r\n        return val == null?\"\":(typeof val ==='object')?JSON.stringify(val):val\r\n    }\r\n    Vue.prototype._render = function () { //render函数变成 vnode\r\n        let vm = this\r\n        let render = vm.$options.render\r\n        // console.log(render,'||this is render')\r\n        // console.log(this,\"||this is this\")\r\n        let vnode = render.call(this)\r\n        // console.log(vnode,'||this is vnode')\r\n        return vnode\r\n    }\r\n}\r\n//vnode只可以描述节点\r\n\r\n//创建元素\r\nfunction createElement(tag,data={},...children){\r\n    return vnode(tag,data,data.key,children)\r\n}\r\n//创建文本\r\nfunction createText(text){\r\n    return vnode(undefined,undefined,undefined,undefined,text)\r\n}\r\n//创建vnode\r\nfunction vnode(tag,data,key,children,text){\r\n    return {\r\n        tag,\r\n        data,\r\n        key,\r\n        children,\r\n        text\r\n    }\r\n}","import { initGlobApi } from \"./global-api/index\"\r\nimport { initMixin } from \"./init\"\r\nimport { lifecycleMixin } from \"./lifecycle\"\r\nimport { renderMixin } from \"./vnode/index\"\r\n\r\nfunction Vue(options) {\r\n    // console.log(options,'this.options')\r\n    //初始化\r\n    this._init(options)\r\n}\r\ninitMixin(Vue)\r\nlifecycleMixin(Vue)  //添加生命周期\r\nrenderMixin(Vue) //添加_render\r\n//全局方法\r\ninitGlobApi(Vue)\r\nexport default Vue"],"names":["HOOKS","starts","data","parentVal","childVal","computed","watch","methods","forEach","hooks","mergeHook","concat","mergeOptions","parent","child","options","key","mergeField","initGlobApi","Vue","Mixin","mixin","defaultTagRE","genPorps","attrs","str","_loop","attr","i","name","obj","value","split","item","_item$split","_item$split2","_slicedToArray","val","JSON","stringify","length","slice","genChildren","el","children","map","gen","join","node","type","generate","text","test","tokens","lastindex","lastIndex","match","exec","index","push","trim","code","tag","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","root","createParent","stack","createASTElement","start","element","charts","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","tagName","endTagMatch","advance","substring","n","compileToFunction","ast","render","Function","oldArrayProtoMethods","Array","prototype","ArrayMethods","Object","create","_len","arguments","args","_key","result","apply","inserted","splice","ob","__ob__","observeArray","dep","notify","id","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","updata","pushTarget","popTarget","observer","_typeof","Observer","defineProperty","enumerable","configurable","isArray","__proto__","walk","keys","defineReactive","childDep","get","set","newValue","initState","vm","opts","$options","props","initData","_data","call","proxy","source","console","log","patch","oldVnode","vnode","createEl","parentEL","parentNode","insertBefore","nextsibling","removeChild","document","createElement","appendChild","createTextNode","updataComponent","cb","exprOrfn","deps","depsId","Set","getter","has","add","run","queueWatcher","queue","pending","setTimeout","mounetComponent","callHook","_updata","_render","lifecycleMixin","$el","hook","handlers","initMixin","_init","$mount","querySelector","template","outerHTML","renderMixin","_c","_v","createText","_s","undefined"],"mappings":"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"}