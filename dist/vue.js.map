{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/utils/nextTick.js","../src/observe/watcher.js","../src/initState.js","../src/compiler/parse.js","../src/compiler/generate.js","../src/compiler/index.js","../src/vnode/patch.js","../src/liftcycle.js","../src/utils/index.js","../src/init.js","../src/vnode/index.js","../src/global-api/index.js","../src/index.js"],"sourcesContent":["//函数劫持\r\n// 1 获取到数组原型上的方法（原来的方法）\r\nlet oldArrayProtoMethods = Array.prototype;\r\n\r\n//2继承一下\r\nexport let arrayMethods = Object.create(oldArrayProtoMethods)\r\n\r\nlet methods = [\r\n    'push',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(item => {\r\n    //进行函数劫持 push\r\n    arrayMethods[item] = function (...args) { //我自己的逻辑\r\n        //调用原来数组的方法\r\n        // console.log('数组被调用')\r\n        //当调用数组我们劫持后的这个7个方法 页面应该更新\r\n        //我们要知道数组对应那个dep\r\n        let result = oldArrayProtoMethods[item].apply(this, args)//this 就是  observer里的value\r\n        // 数组添加对象情况 ，给添加的对象，进行劫持\r\n        let inserted; // arr.push({a:1})\r\n        switch (item) {\r\n            case 'push': // arr.push({a:1},{b:2})\r\n            case 'unshift': // 这里是两个追加   追加的内容可能是对象类型，应该被再次进行 劫持\r\n                inserted = args\r\n                break;\r\n            case \"splice\":\r\n                args.splice(2); // arr.splice(0,1,{a:4})\r\n                break;\r\n        }\r\n        //判断一下 {}\r\n        let ob = this.__ob__\r\n        if(inserted) ob.obserArray(inserted); //给数组新增的值也要进行观测 {}\r\n        ob.dep.notify() //通知数组更新\r\n        return result\r\n    }\r\n})\r\n\r\n\r\n","let id = 0\r\nclass Dep {\r\n    constructor() {\r\n        this.subs = []\r\n        this.id = id++\r\n    }\r\n    //收集watcher \r\n    depend() {\r\n      \r\n        //我们希望water 可以存放 dep\r\n        //实现双休记忆的，让watcher 记住\r\n        //dep同时，让dep也记住了我们的watcher\r\n        Dep.targer.addDep(this)\r\n        // this.subs.push(Dep.targer) // id：1 记住他的dep\r\n    }\r\n    addSub(watcher){\r\n        this.subs.push(watcher)\r\n    }\r\n    //更新\r\n    notify() {\r\n        // console.log(Dep.targer)\r\n        this.subs.forEach(watcher => {\r\n            watcher.updata()\r\n        })\r\n    }\r\n}\r\n\r\n//dep  和 watcher 关系\r\nDep.targer = null;\r\nexport function pushTarget(watcher) {  //添加 watcher\r\n\r\n    Dep.targer = watcher //保留watcher\r\n    // console.log(Dep.targer)\r\n}\r\nexport function popTarget() {\r\n    Dep.targer = null //将变量删除\r\n}\r\nexport default Dep\r\n //多对多的关系\r\n //1. 一个属性有一个dep ,dep 作用：用来收集watcher的\r\n //2. dep和watcher 关系：(1)dep 可以存放多个watcher  (2):一个watcher可以对应多个dep","import { arrayMethods } from './array'\r\nimport Dep from './dep';\r\nclass observe {\r\n    constructor(value) {\r\n        //1 给所有的对象类型添加一个dep 属性\r\n        this.dep = new Dep() // 注意 （1）{}  (2) [] 不是给里面属性添加dep\r\n        // console.log(data)\r\n        //使用defineProperty 重新定义属性 作用用来观测数据已经劫持过来\r\n          //判断一个对象是否被观察过看他有没有 __ob__这个属性\r\n          Object.defineProperty(value,\"__ob__\",{\r\n           enumerable:false, //不能枚举\r\n           configurable:false, //控制属性描述符是否能改变\r\n           value:this\r\n          })\r\n\r\n        if (Array.isArray(value)) { //注意对数组中的数据进行劫持 方法 劫持 修改数据的方法\r\n            //我希望调用push  shift unshift splice sort reverse pop 这七个方法，那么我们就可以对\r\n            //你这个方法进行劫持\r\n            // 函数劫持，切片编程 []._ \r\n            value.__proto__ = arrayMethods // 对象__proto__属性：\r\n            //监听数组中的值时对象\r\n            this.obserArray(value)\r\n        } else {\r\n            this.walk(value)\r\n        }\r\n\r\n    }\r\n    obserArray(value) {\r\n        //进行循环\r\n        value.forEach(item => {\r\n            Observer(item)\r\n        })\r\n    }\r\n    walk(data) { //数据是对象的的{a:{b:{}}}\r\n        //循环\r\n        let keys = Object.keys(data) //获取对象的key  注意这个key 只是 对象的最外层的\r\n        keys.forEach(item => {\r\n            defineReactive(data, item, data[item]) //Vue.util 中有的\r\n        })\r\n    }\r\n}\r\n//对数据进行劫持\r\nfunction defineReactive(data, key, value) {\r\n    // Object.defineProperty\r\n  let chilidDep =  Observer(value) //获取到数组对应的dep \r\n    //1给我们的每个属性添加一个dep\r\n    let dep = new Dep();\r\n    //2将dep 存放起来，当页面取值时，说明这个值用来渲染，在将这个watcher和这个属性对应起来\r\n    Object.defineProperty(data, key, {\r\n        get() { //依赖收集\r\n            // console.log('获取数据', data, key, value)\r\n            if(Dep.targer){ //让这个属性记住这个watcher\r\n                dep.depend()\r\n                //3当我们对arr取值的时候 我们就让数组的dep记住这个watcher\r\n                if(chilidDep){\r\n                    chilidDep.dep.depend() //数组收集watcher\r\n                }\r\n            }\r\n            //检测一下 dep\r\n            //获取arr的值，会调用get 方法 我希望让当前数组记住这个渲染watcher\r\n\r\n            // console.log(dep.subs)\r\n            return value\r\n        },\r\n        set(newValue) { //依赖更新\r\n            //注意设置的值和原来的值是一样的\r\n            // console.log('设置值', data, key, value)\r\n            if (newValue == value) return;\r\n            Observer(newValue) //如果用户将值改为对象继续监控\r\n            value = newValue\r\n            dep.notify()\r\n        }\r\n    })\r\n}\r\nexport function Observer(data) {\r\n    // data 我们需要进行判断 typeof  object null\r\n    //不能不是对象 并且不是null\r\n    if (typeof data !== 'object' || data == null) {\r\n        return;\r\n    }\r\n    //判断用户是否已经观测\r\n    if(data.__ob__){\r\n        return data;\r\n    }\r\n    //对这个是数据进行劫持 我们通过一个类\r\n    return new observe(data)\r\n}"," let callback = []\r\n let pending = false\r\n function flush(){\r\n    callback.forEach(cb =>cb())\r\n    pending =false\r\n }\r\n let timerFunc\r\n //处理兼容问题\r\n if(Promise){\r\n    timerFunc = ()=>{\r\n        Promise.resolve().then(flush) //异步处理\r\n    }\r\n }else if(MutationObserver){ //h5 异步方法 他可以监听 DOM 变化 ，监控完毕之后在来异步更新\r\n   let observe = new MutationObserver(flush)\r\n   let textNode = document.createTextNode(1) //创建文本\r\n   observe.observe(textNode,{characterData:true}) //观测文本的内容\r\n   timerFunc = ()=>{\r\n    textNode.textContent = 2\r\n   }\r\n }else if(setImmediate){ //ie\r\n    timerFunc = ()=>{\r\n        setImmediate(flush) \r\n    }\r\n }\r\n export function nextTick(cb){\r\n     // 1vue 2\r\n    //  console.log(cb)\r\n     //列队 [cb1,cb2]\r\n     callback.push(cb)\r\n     //Promise.then()  vue3\r\n     if(!pending){\r\n         timerFunc()   //这个方法就是异步方法 但是 处理兼容问题\r\n         pending = true\r\n     }\r\n }","import { pushTarget, popTarget } from \"./dep\";\r\nimport { nextTick } from \"../utils/nextTick\";\r\n\r\n//为什么封装成一个类 ，方便我们的扩展\r\nlet id = 0; //全局的\r\nclass Watcher {\r\n    //vm 实例\r\n    //exprOrfn vm._updata(vm._render()) \r\n    constructor(vm, exprOrfn, cb, options) {\r\n        // 1.创建类第一步将选项放在实例上\r\n        this.vm = vm;\r\n        this.exprOrfn = exprOrfn;\r\n        this.cb = cb;\r\n        this.options = options;\r\n        // 2. 每一组件只有一个watcher 他是为标识\r\n        this.id = id++\r\n        this.user = !!options.user\r\n        // 3.判断表达式是不是一个函数\r\n        this.deps = []  //watcher 记录有多少dep 依赖\r\n        this.depsId = new Set()\r\n        if (typeof exprOrfn === 'function') {\r\n            this.getter = exprOrfn\r\n        }else{ //{a,b,c}  字符串 变成函数 \r\n            this.getter =function(){ //属性 c.c.c\r\n              let path = exprOrfn.split('.')\r\n              let obj = vm\r\n              for(let i = 0;i<path.length;i++){\r\n                obj  = obj[path[i]]\r\n              }\r\n              return obj //\r\n            }\r\n        }\r\n        // 4.执行渲染页面\r\n        this.value =  this.get() //保存watch 初始值\r\n\r\n    }\r\n    addDep(dep) {\r\n        //去重  判断一下 如果dep 相同我们是不用去处理的\r\n        let id = dep.id\r\n        //  console.log(dep.id)\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(dep)\r\n            this.depsId.add(id)\r\n            //同时将watcher 放到 dep中\r\n            // console.log(666)\r\n            dep.addSub(this)\r\n\r\n        }\r\n        // 现在只需要记住  一个watcher 有多个dep,一个dep 有多个watcher\r\n        //为后面的 component \r\n    }\r\n    run() { //old new\r\n       let value =  this.get() //new\r\n       let oldValue = this.value //old\r\n       this.value = value\r\n       //执行 hendler (cb) 这个用户wathcer\r\n       if(this.user){\r\n        this.cb.call(this.vm,value,oldValue)\r\n       }\r\n    }\r\n    get() {\r\n        // Dep.target = watcher\r\n\r\n        pushTarget(this) //当前的实例添加\r\n      const value = this.getter()// 渲染页面  render()   with(wm){_v(msg,_s(name))} ，取值（执行get这个方法） 走劫持方法\r\n        popTarget(); //删除当前的实例 这两个方法放在 dep 中\r\n        return value\r\n    }\r\n    //问题：要把属性和watcher 绑定在一起   去html页面\r\n    // (1)是不是页面中调用的属性要和watcher 关联起来\r\n    //方法\r\n    //（1）创建一个dep 模块\r\n    updata() { //三次\r\n        //注意：不要数据更新后每次都调用 get 方法 ，get 方法回重新渲染\r\n        //缓存\r\n        // this.get() //重新渲染\r\n        queueWatcher(this)\r\n    }\r\n}\r\nlet queue = [] // 将需要批量更新的watcher 存放到一个列队中\r\nlet has = {}\r\nlet pending = false\r\nfunction flushWatcher() {\r\n    queue.forEach(item => {\r\n        item.run()})\r\n    queue = []\r\n    has = {}\r\n    pending = false\r\n}\r\nfunction queueWatcher(watcher) {\r\n    let id = watcher.id // 每个组件都是同一个 watcher\r\n    //    console.log(id) //去重\r\n    if (has[id] == null) {//去重\r\n        //列队处理\r\n        queue.push(watcher)//将wacher 添加到列队中\r\n        has[id] = true\r\n        //防抖 ：用户触发多次，只触发一个\r\n        if (!pending) {\r\n            //异步：等待同步代码执行完毕之后，再执行\r\n            // setTimeout(()=>{\r\n            //   queue.forEach(item=>item.run())\r\n            //   queue = []\r\n            //   has = {}\r\n            //   pending = false\r\n            // },0)\r\n            nextTick(flushWatcher) //  nextTick相当于定时器\r\n        }\r\n        pending = true\r\n    }\r\n}\r\nexport default Watcher\r\n\r\n//nextTick 原理\r\n\r\n//优化\r\n//1 创建nextTick 方法","import { Observer } from \"./observe/index.js\";\r\nimport { nextTick } from \"./utils/nextTick.js\";\r\nimport Watcher from './observe/watcher'\r\nexport function initState(vm) {\r\n    // console.log(vm)\r\n    //\r\n    const opts = vm.$options\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm);\r\n    }\r\n    if (opts.props) {\r\n        initProps(vm);\r\n    }\r\n  \r\n \r\n    if (opts.computed) {\r\n        initComputed(vm);\r\n    }\r\n    if (opts.methods) {\r\n        initMethod(vm);\r\n    }\r\n}\r\n\r\nfunction initComputed(vm) {\r\n\r\n}\r\nfunction initMethod(vm) {\r\n\r\n}\r\n//实现代理  将data中属性代理到 vm (this)\r\nfunction proxy(vm, data, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[data][key]// vm._data.a\r\n        },\r\n        set(newValue) {\r\n            vm[data][key] = newValue\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) { //数据进行初始化\r\n    let data = vm.$options.data\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data\r\n    // console.log(data)\r\n    //数据的劫持方案对象Object.defineProperty\r\n    //将data中的属性代理到vm  上\r\n    for (let key in data) {\r\n        proxy(vm, \"_data\", key)\r\n    }\r\n    Observer(data)\r\n}\r\nfunction initProps(vm) {\r\n\r\n}\r\nfunction initWatch(vm) {\r\n    //1 获取watch\r\n    let watch = vm.$options.watch\r\n    console.log(watch)\r\n    //2 遍历  { a,b,c}\r\n    for (let key in watch) {\r\n        //2.1获取 他的属性对应的值 （判断)\r\n        let handler = watch[key] //数组 ，对象 ，字符，函数\r\n        if (Array.isArray(handler)) {//数组  []\r\n            handler.forEach(item=>{\r\n                createrWatcher(vm,key,item) \r\n            })\r\n        } else {//对象 ，字符，函数\r\n           //3创建一个方法来处理\r\n           createrWatcher(vm,key,handler)\r\n        }\r\n    }\r\n}\r\n\r\n//vm.$watch(()=>{return 'a'}) // 返回的值就是  watcher 上的属性 user = false\r\n//格式化处理\r\n//vm 实例\r\n//exprOrfn key\r\n//hendler key对应的值\r\n//options 自定义配置项 vue自己的为空,用户定义的才有\r\nfunction createrWatcher(vm,exprOrfn,handler,options){\r\n   //3.1 处理handler\r\n   if(typeof handler ==='object'){\r\n       options = handler; //用户的配置项目\r\n       handler = handler.handler;//这个是一个函数\r\n   }\r\n   if(typeof handler ==='string'){// 'aa'\r\n       handler = vm[handler] //将实例行的方法作为 handler 方法代理和data 一样\r\n   }\r\n   //其他是 函数\r\n   //watch 最终处理 $watch 这个方法\r\n//    console.log(vm,\"||vm\")\r\n//    console.log(exprOrfn,\"||exprOrfn\")\r\n//    console.log(handler,\"||handler\")\r\n//    console.log(options,\"||options\")\r\n\r\n   return vm.$watch(vm,exprOrfn,handler,options)\r\n}\r\n\r\nexport function stateMixin(vm) {\r\n    // console.log(vm,6666)\r\n    //列队 :1就是vue自己的nextTick  2用户自己的\r\n    vm.prototype.$nextTick = function (cb) { //nextTick: 数据更新之后获取到最新的DOM\r\n        //  console.log(cb)\r\n        nextTick(cb)\r\n    },\r\n    vm.prototype.$watch =function(Vue,exprOrfn,handler,options={}){ //上面格式化处理\r\n        //   console.log(exprOrfn,handler,options)\r\n          //实现watch 方法 就是new  watcher //渲染走 渲染watcher $watch 走 watcher  user false\r\n         //  watch 核心 watcher\r\n         let watcher = new Watcher(Vue,exprOrfn,handler,{...options,user:true})\r\n          \r\n         if(options.immediate){\r\n            handler.call(Vue) //如果有这个immediate 立即执行\r\n         }\r\n    }\r\n    \r\n}\r\n\r\n//nextTick 原理 \r\n\r\n// watch 基本使用  init\r\n","\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;   // 小a-z 大A到Z 标签名称： div  span a-aa\r\n//?: 匹配不捕获\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // 捕获这种 <my:xx> </my:xx>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\n//属性匹配   <div id=\"atts\"></div>  // aa = \"aa\" | aa = 'aa'\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的  <div></div>  <br/>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{xx}}  默认的 双大括号\r\n//vue3 一摸一样的\r\n\r\n//通过数据结构 树，栈  变成 ast语法树\r\n\r\n\r\n\r\nexport function parseHTML(html) {\r\n    //创建树\r\n    function createASTELement(tagName, attrs) {\r\n        return {\r\n            tag: tagName, //标签名称\r\n            type: 1, //元素类型\r\n            children: [],// 孩子列表\r\n            attrs,   //属性集合\r\n            parent: null  // 父元素\r\n        }\r\n    }\r\n    //<div>hello {{name}} <span>world</span></div>\r\n    //创建3个方法\r\n    let root; //判断是否是根元素\r\n    let currentParent; //这个元素的当前父亲元素\r\n    //4 检测 标签是否符合预期 <div><span></span></div>   栈的方式来解决这个： [div,span]\r\n    let stack = []\r\n    function start(tagName, attrs) { //开始的标签\r\n        // console.log(tagName, attrs, '--开始--')\r\n        let element = createASTELement(tagName, attrs)\r\n        //注意：是不是根元素\r\n        if (!root) {\r\n            root = element\r\n        }\r\n        currentParent = element//当前解析的标签保存起来\r\n        stack.push(element)\r\n    }\r\n    //<div>hello<span></span> <p></p></div> // [div,span]\r\n    function end(tagName) { //结束的标签\r\n        // console.log(tagName, '----结束---')\r\n        let element = stack.pop() //取出 栈中的最后一个\r\n        currentParent = stack[stack.length - 1]\r\n        // debugger\r\n        if (currentParent) { //在闭合时可以知道这个标签的父亲说谁\r\n            element.parent = currentParent\r\n            currentParent.children.push(element) //将儿子放进去\r\n        }\r\n    }\r\n\r\n    function chars(text) { //文本\r\n        // console.log(text, '---文本---')\r\n        //注意：空格\r\n        text = text.replace(/\\s/g, '')\r\n        if (text) {\r\n            currentParent.children.push({\r\n                type: 3,\r\n                text\r\n            })\r\n        }\r\n    }\r\n    //1解析标签  <div id=\"my\">hello {{name}} <span>world</span></div>\r\n    while (html) { // 只要html 不为空字符串就一直执行下去\r\n        let textEnd = html.indexOf('<');\r\n        if (textEnd === 0) {\r\n            //肯定是标签\r\n            // console.log('开始', html)\r\n            //这个标签是开始标签还是结束标签\r\n            const startTagMatch = parseStartTag() //开始标签匹配结果\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue; //中断（循环中）的一个迭代，如果发生指定的条件。然后继续循环中的下一个迭代。\r\n            }\r\n            //处理结束标签\r\n            const endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n\r\n            // console.log(html)\r\n        }\r\n        //文本 \r\n        let text;\r\n        if (textEnd > 0) {\r\n            // console.log(textEnd)\r\n            text = html.substring(0, textEnd)\r\n        }\r\n        if (text) {//处理文本\r\n            advance(text.length)\r\n            chars(text)//获取到文本\r\n        }\r\n        // console.log(html)\r\n        // break //添加break 不然死循环\r\n    }\r\n    //删除标签\r\n    function advance(n) { //将字符串进行截取操作，再跟新到html\r\n        html = html.substring(n)\r\n\r\n    }\r\n    //匹配 开头的标签\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)// 1：成功结果 2:false\r\n        if (start) {//成功\r\n            // console.log(start)\r\n            //组合ast语法树\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            // console.log(match)\r\n            //删除开始标签\r\n            advance(start[0].length)\r\n            // console.log(html)\r\n            //属性,注意 可能又多个 属性  遍历\r\n            // 1：循环\r\n            // 2: 注意：1闭合标签 <div/>  , 2这个标签属性\r\n            let end;\r\n            let attr;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // console.log(attr) //属性\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n                // console.log(match)\r\n                //ast语法树获取，删除\r\n                advance(attr[0].length) //删除属性 （没有了）\r\n                //    break;\r\n            }\r\n            if (end) {\r\n                advance(end[0].length) //删除 >\r\n                // console.log(end)\r\n                return match\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // 最后返回  root \r\n    return root\r\n}","//思路\r\n//  <div id=\"app\" style=\"color:red\"> hello {{name}}<p>hello1</P> </div>\r\n//变成 render()\r\n// render(){\r\n//      return _c(\"div\",{id:\"app\",style:{color:\"res\"}},_v('hello'+_s(name)),_c('p'，null,_v('hello1)))\r\n//    }\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //注意正则匹配 lastIndex\r\n// 处理元素的属性\r\nfunction genProps(attrs) {\r\n    //处理属性\r\n    let str = ''\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        //注意;   style：\"color:red;font-size: 20px\r\n        if (attr.name === 'style') {\r\n            let obj = {} //对样式进行特殊处理\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':')\r\n                obj[key] = value\r\n            })\r\n            attr.value = obj //\r\n        }\r\n        //其他  'id:app',注意最后会多个属性化 逗号\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`  // -1为最后一个字符串的位置  演示一下 \r\n    // let reg =/a/g    reg.test('ad') false  \r\n}\r\n//判断是否又儿子\r\nfunction genChildren(el) {\r\n    const children = el.children\r\n    if (children) { //将所有\r\n        return children.map(child => gen(child)).join(',')\r\n    }\r\n\r\n\r\n}\r\nfunction gen(node) { //获取到的元素\r\n    //注意 是什么类型  文本   div\r\n    if (node.type === 1) {\r\n        return generate(node) //生成元素节点的字符串\r\n    } else {\r\n        let text = node.text // 获取文本  注意  普通的文本  hello{{name}}?{{num}}\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`  // _v(html)  _v('hello'+_s(name))\r\n        }\r\n        let tokens = [] //存放每一段的代码\r\n        let lastIndex = defaultTagRE.lastIndex = 0;//如果正则是全局模式 需要每次使用前变为0\r\n        let match;// 每次匹配到的结果  exec 获取 {{name}}\r\n        while (match = defaultTagRE.exec(text)) {\r\n            // console.log(match) 获取到 又{{}}  元素\r\n            //  console.log(match)\r\n           let index = match.index;// 保存匹配到的索引\r\n          // hello{{name}} ? {{num}}\r\n            if (index > lastIndex) {\r\n               tokens.push(JSON.stringify(text.slice(lastIndex,index))) //添加的是文本\r\n            //    console.log(tokens)\r\n            }\r\n            //{{name}} 添加{{}} aa\r\n            tokens.push(`_s(${match[1].trim()})`)\r\n             lastIndex = index+match[0].length //最后 {{}} 索引位置\r\n        }\r\n        if(lastIndex<text.length){\r\n           tokens.push(JSON.stringify(text.slice(lastIndex))) \r\n        }\r\n        //最终返回出去\r\n\r\n        return `_v(${tokens.join(\"+\")})`\r\n    }\r\n\r\n\r\n}\r\n//语法层面的转移\r\nexport function generate(el) {\r\n    // console.log(el)\r\n    let children = genChildren(el)\r\n    //方法 拼接字符串  源码也是这样操作 [{}]    ${el.attrs.length?`{style:{color:red}}`:'undefined'}\r\n    let code = `_c('${el.tag}',${el.attrs.length ? `${genProps(el.attrs)}` : 'undefined'}${\r\n        children ? `,${children}` : ''\r\n        })`\r\n    return code\r\n}","import { parseHTML } from \"./parse\";\r\nimport { generate } from \"./generate\";\r\n\r\n\r\nexport function compileToFunction(template) { //编译模板\r\n    let ast = parseHTML(template)\r\n    // console.log(ast)\r\n    //2通过这个棵树重新的生成代码  render\r\n    let code = generate(ast) //对象\r\n    //  console.log(code)\r\n     //3将字符传变成函数\r\n    //  let render = new Function(code) //new Function()创建函数的语法： es6\r\n    let render = new Function(`with(this){return ${code}}`) //通过with 来进行取值，稍后调用\r\n    // console.log(render)\r\n    //render 函数就可以通过改变this 让这个函数内部取到结果？\r\n     //注意  code 中的变量  name 那里的  ，是不是this\r\n    //  console.log(render)\r\n     return render\r\n     //后面渲染我们的节点 ，再放到页面上去\r\n}\r\n\r\n// //with   添加一个作用域\r\n// let obj ={a:1,b:2}\r\n// with(obj ){\r\n//       console.log(a,b)\r\n// }","export function patch(oldVnode, Vnode) {\r\n    //原则  将虚拟节点转换成真实的节点\r\n    console.log(oldVnode, Vnode)\r\n    // console.log(oldVnode.nodeType)\r\n    // console.log(Vnode.nodeType)\r\n    //第一次渲染 oldVnode 是一个真实的DOM\r\n    //判断ldVnode.nodeType是否为一,意思就是判断oldVnode是否为属性节点\r\n    if (oldVnode.nodeType === 1) {\r\n        console.log(oldVnode, Vnode) //注意oldVnode 需要在加载 mount 添加上去  vm.$el= el\r\n\r\n        let el = createELm(Vnode) // 产生一个新的DOM\r\n        let parentElm = oldVnode.parentNode //获取老元素（app） 父亲 ，body\r\n        //   console.log(oldVnode)\r\n        //  console.log(parentElm)\r\n\r\n        parentElm.insertBefore(el, oldVnode.nextSibling) //当前真实的元素插入到app 的后面\r\n        parentElm.removeChild(oldVnode) //删除老节点\r\n        //重新赋值\r\n        return el\r\n    } else { //  diff\r\n        // console.log(oldVnode.nodeType)\r\n        // console.log(oldVnode, Vnode)\r\n        //1 元素不是一样 \r\n        if (oldVnode.tag !== Vnode.tag) {\r\n            //旧的元素 直接替换为新的元素\r\n            return oldVnode.el.parentNode.replaceChild(createELm(Vnode), oldVnode.el)\r\n        }\r\n        //2 标签一样 text  属性 <div>1</div>  <div>2</div>  tag:undefined\r\n        if (!oldVnode.tag) {\r\n            if (oldVnode.text !== Vnode.text) {\r\n                return oldVnode.el.textContent = Vnode.text\r\n            }\r\n        }\r\n        //2.1属性 (标签一样)  <div id='a'>1</div>  <div style>2</div>\r\n        //在updataRpors方法中处理\r\n        //方法 1直接复制\r\n        let el = Vnode.el = oldVnode.el\r\n        updataRpors(Vnode, oldVnode.data)\r\n        //diff子元素 <div>1</div>  <div></div>\r\n        console.log(oldVnode,Vnode)\r\n        let oldChildren = oldVnode.children || []\r\n        let newChildren = Vnode.children || []\r\n        if (oldChildren.length > 0 && newChildren.length > 0) { //老的有儿子 新有儿子\r\n            //创建方法\r\n            \r\n            updataChild(oldChildren, newChildren, el)\r\n        } else if (oldChildren.length > 0 && newChildren.length <= 0) { //老的元素 有儿子 新的没有儿子\r\n            el.innerHTML = ''\r\n        } else if (newChildren.length > 0 && oldChildren.length <= 0) { //老没有儿子  新的有儿子\r\n            for (let i = 0; i < newChildren.length; i++) {\r\n                let child = newChildren[i]\r\n                //添加到真实DOM\r\n                el.appendChild(createELm(child))\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction updataChild(oldChildren, newChildren, parent) {\r\n    //diff算法 做了很多优化 例子<div>11</div> 更新为 <div>22</div> \r\n    //dom中操作元素 常用的 思想 尾部添加 头部添加 倒叙和正序的方式\r\n    //双指针 遍历\r\n    console.log(oldChildren, newChildren)\r\n    let oldStartIndex = 0 //老的开头索引\r\n    let oldStartVnode = oldChildren[oldStartIndex];\r\n    let oldEndIndex = oldChildren.length - 1\r\n    let oldEndVnode = oldChildren[oldEndIndex]\r\n\r\n    let newStartIndex = 0 //新的开头索引\r\n    let newStartVnode = newChildren[newStartIndex];\r\n    let newEndIndex = newChildren.length - 1\r\n    let newEndVnode = newChildren[newEndIndex]\r\n    // console.log(oldEndIndex,newEndIndex)\r\n    // console.log(oldEndVnode,newEndVnode)\r\n\r\n    function makeIndexBykey(child){\r\n        let map = {}\r\n            child.forEach((item,index)=>{\r\n                if(item.key){\r\n                    map[item.key] =index\r\n                }\r\n            })\r\n        return map\r\n    }\r\n    //创建映射表\r\n    let map =makeIndexBykey(oldChildren)\r\n\r\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n        //比对子元素\r\n        console.log(666)\r\n        if (isSomeVnode(oldStartVnode, newStartVnode)) {\r\n            //递归\r\n            //1 从头部开始\r\n            console.log(1)\r\n            patch(oldStartVnode, newStartVnode);\r\n            //移动指针\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n            console.log(oldStartVnode,newStartVnode)\r\n        }//2 从尾部开始\r\n        else if(isSomeVnode(oldEndVnode, newEndVnode)){\r\n            //\r\n            console.log(2)\r\n            patch(oldEndVnode, newEndVnode);\r\n            oldEndVnode = oldChildren[--oldEndIndex]\r\n            newEndVnode = newChildren[--newEndIndex]\r\n        }//3 交叉比对 从头\r\n        else if(isSomeVnode(oldStartVnode,newEndVnode)){\r\n            console.log(3)\r\n            patch(oldStartVnode, newEndVnode);\r\n            oldStartVnode =oldChildren[++oldStartIndex]\r\n            newEndVnode = newChildren[--newEndIndex];\r\n        }//4 交叉比对 从尾\r\n        else if(isSomeVnode(oldEndVnode,newStartVnode)){\r\n            console.log(4)\r\n            patch(oldEndVnode, newStartVnode);\r\n            oldEndVnode =oldChildren[--oldStartIndex]\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }//5 暴力比对 儿子之间没有任何关系\r\n        else{\r\n            console.log(5)\r\n            //1 创建 旧元素映射表\r\n            //2 从旧的中寻找新的中有的元素\r\n            let moveIndex = map[newStartVnode.key]\r\n            //没有相应key值的元素\r\n            if(moveIndex == undefined){\r\n                parent.insertBefore(createELm(newStartVnode),oldStartVnode.el)\r\n            }//有\r\n            else{\r\n                let moveVnode = oldChildren[moveIndex] //获取到有的元素\r\n                oldChildren[moveIndex]=null\r\n                //a b f c 和 d f e \r\n                parent.insertBefore(moveVnode.el,oldStartVnode.el)\r\n\r\n                patch(moveVnode,newEndVnode)\r\n            }\r\n            newStartVnode = newChildren[++newStartIndex]\r\n        }\r\n    }\r\n    //判断完毕,添加多余的子儿子  a b c  新的 a b c d\r\n    console.log(newEndIndex)\r\n    if (newStartIndex <= newEndIndex) {\r\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n            parent.appendChild(createELm(newChildren[i]))\r\n        }\r\n    }\r\n    //将老的多余的元素删去\r\n    if (oldStartIndex <= oldEndIndex) {\r\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n            //注意null\r\n            let child = oldChildren[i]\r\n            if(child !=null ){\r\n                parent.removeChild(child.el) //删除元素\r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\nfunction isSomeVnode(oldContext, newContext) {\r\n    // return true\r\n    return (oldContext.tag == newContext.tag) && (oldContext.key === newContext.key);\r\n}  \r\n\r\n\r\n\r\n//添加属性\r\nfunction updataRpors(vnode, oldProps = {}) { //第一次\r\n    let newProps = vnode.data || {} //获取当前新节点 的属性\r\n    let el = vnode.el //获取当前真实节点 {}\r\n    //1老的有属性，新没有属性\r\n    for (let key in oldProps) {\r\n        if (!newProps[key]) {\r\n            //删除属性\r\n            el.removeAttribute[key] //\r\n        }\r\n    }\r\n    //2演示 老的 style={color:red}  新的 style=\"{background:red}\"\r\n    let newStyle = newProps.style || {} //获取新的样式\r\n    let oldStyle = oldProps.style || {} //老的\r\n    for (let key in oldStyle) {\r\n        if (!newStyle[key]) {\r\n            el.style = ''\r\n        }\r\n    }\r\n    //新的\r\n    for (let key in newProps) {\r\n        if (key === \"style\") {\r\n            for (let styleName in newProps.style) {\r\n                el.style[styleName] = newProps.style[styleName]\r\n            }\r\n        } else if (key === 'class') {\r\n            el.className = newProps.class\r\n        } else {\r\n            el.setAttribute(key, newProps[key])\r\n        }\r\n    }\r\n}\r\n//vnode 变成真实的Dom\r\nexport function createELm(vnode) {\r\n    let {\r\n        tag,\r\n        children,\r\n        key,\r\n        data,\r\n        text\r\n    } = vnode\r\n    //注意\r\n    if (typeof tag === 'string') { //创建元素 放到 vnode.el上\r\n        vnode.el = document.createElement(tag) //创建元素 \r\n        updataRpors(vnode)\r\n        //有儿子\r\n        children.forEach(child => {\r\n            // 递归 儿子 将儿子渲染后的结果放到 父亲中\r\n            vnode.el.appendChild(createELm(child))\r\n        })\r\n    } else { //文本\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el //新的dom\r\n}\r\n\r\n//思路 ：虚拟dom 变成正式的dom \r\n// 1.获取到真实的dom  虚拟daom\r\n// 2.将虚拟dom变成正式dom\r\n// 3.获取到旧dom的父亲元素\r\n// 4.将新的dom 方法 app 后面\r\n// 5.删除 就的元素","import {\r\n   patch\r\n} from './vnode/patch'\r\nimport Watcher from './observe/watcher'\r\nexport function mountComponent(vm, el) {\r\n   //调用render方法去渲染 el属性\r\n\r\n   //方法：先调用render方法创建虚拟节点，在将虚拟节点渲染到页面上\r\n   //源码方式\r\n   callHook(vm, \"beforeMount\")\r\n   //挂载  重新封装一下 变成一个类，这个类他是响应式变的，数据改变了我们就调用这个方法\r\n   //   vm._updata(vm._render()) \r\n   let updataComponent = () => {\r\n      vm._updata(vm._render())\r\n   }\r\n   //这个watcher 是用于渲染的 目前没有任何功能 ，updataComponent \r\n   new Watcher(vm, updataComponent, () => {\r\n      callHook(vm, 'updated')\r\n   }, true) //Watcher 有什么用  和之前差不多，1把实例缠绕进去 ,2在给他传入一个方法\r\n   //true 标识渲染的  ，（）=》{} 跟新逻辑\r\n   callHook(vm, \"mounted\")\r\n}\r\n\r\n//创建这两个方法\r\nexport function liftcycleMixin(Vue) { //这个方法在那个地方使用的\r\n   Vue.prototype._updata = function (vnode) {\r\n      //console.log(vnode)\r\n      const vm = this\r\n      //vm.$el 真实的dom\r\n      //需要区分一下 是首次还是更新\r\n      let prevVnode =vm._vnode //如果是首次 值为null\r\n      if(!prevVnode){\r\n         vm.$el =patch(vm.$el,vnode) //获取到最新的渲染值\r\n         vm._vnode = vnode //保存原来的那一次\r\n      }else{\r\n         console.log(prevVnode,vnode,\"this is prevVnode,vnode\")\r\n         patch(prevVnode,vnode)\r\n      }\r\n   }\r\n}\r\n\r\n//生命周期初始化\r\nexport function callHook(vm, hook) {\r\n   const handlers = vm.$options[hook] // created = [a1,a2,a3]\r\n   if (handlers) {\r\n      for (let i = 0; i < handlers.length; i++) {\r\n         handlers[i].call(vm); //改变生命周期中的this\r\n      }\r\n   }\r\n}\r\n//怎么调用\r\n//  callHook(vm,\"created\")","\r\nexport  const HOOKS = [\r\n    \"beforeCreate\",\r\n    \"created\",\r\n    \"beforeMount\",\r\n    \"mounted\",\r\n    \"beforeUpdate\",\r\n    \"updated\",\r\n    \"beforeDestory\",\r\n    \"destroyed\"\r\n]\r\n// 策略模式\r\nconst strats = {}\r\nstrats.data = function (parentVal,childVal){ //data合并\r\n    return childVal //这里应该有合并data 方法\r\n}\r\n// strats.computed =function(){\r\n// }\r\n// strats.methods = function(){}\r\n// strats.watch =function(){\r\n// }\r\n\r\nfunction mergeHook(parentVal,childVal){ //生命周期的合并\r\n    // console.log(parentVal) [a] b [a,b]\r\n  if(childVal){\r\n      if(parentVal){\r\n           return parentVal.concat(childVal);//爸爸和儿子进行并接\r\n      }else{\r\n          return [childVal]  // {}{created:function} // [created]\r\n      }\r\n  }else{\r\n       return parentVal  //不用合并 采用父亲的\r\n  }\r\n}\r\n//遍历这个hooks\r\n HOOKS.forEach(hooks=>{\r\n     strats[hooks] = mergeHook\r\n })\r\n // Vue.options ={}    Vue.mixin({})   {created:[a,b,组件上的]}\r\nexport function mergeOptions(parent,child){ \r\n    const options = {}\r\n    // console.log(parent) {created:[a]}\r\n    //遍历父亲：可能是父亲有，儿子没有\r\n   for(let key in parent){ //父亲和儿子都有在这里进行处理\r\n       mergeField(key)\r\n   }\r\n    //儿子有父亲没有\r\n   for(let key in child){ //将儿子多的赋值到父亲上\r\n      if(!parent.hasOwnProperty(key)){ \r\n          mergeField(key)\r\n      }\r\n   }\r\n    function mergeField(key){ //合并字段 created\r\n         //根据key  不同的策略进行合并\r\n        // 比如 {key:parent[key] child[key]}\r\n        //注意 我们这个key可能是一个钩子函数\r\n        // console.log(child)\r\n        if(strats[key]){ // strats.created = \r\n          options[key]=  strats[key](parent[key],child[key]) //[a]\r\n        }else{\r\n            //默认合并策略\r\n            options[key] = child[key]\r\n        }\r\n        //(1) {created:[a,b]} \r\n    }\r\n    return options\r\n}","//初始化\r\nimport {\r\n  initState\r\n} from './initState'\r\nimport {\r\n  compileToFunction\r\n} from './compiler/index'\r\nimport {\r\n  mountComponent,\r\n  callHook\r\n} from './liftcycle'\r\nimport {\r\n  mergeOptions\r\n} from './utils/index';\r\nexport function initMixin(Vue) {\r\n  //面试题  全局组件和局部组件的区别\r\n  //局部组件是不是在等前的组件中可以使用\r\n  //全局组件在项目中任何地方都可以使用 原因 在组件初始化的时候 合并进来了\r\n\r\n  Vue.prototype._init = function (options) {\r\n    //el 显示页面\r\n    //data  数据初始化\r\n    //\r\n    // console.log(options)\r\n    const vm = this\r\n    // 注意 ：组件中都有一个 vue\r\n    vm.$options = mergeOptions(Vue.options, options) // 需要将用户自定义的options 合并 谁和谁合并\r\n    //初始化 状态 （将数据做一个初始化的劫持，当我改变数据时应跟新视图）\r\n    //vue组件中有很多状态 data,props watch computed\r\n    // console.log(vm.$options)\r\n    callHook(vm, \"beforeCreate\")\r\n    initState(vm) //初始化状态\r\n    callHook(vm, \"created\")\r\n    //vue核心特点  响应式数据原理\r\n    //vue 是一个什么样的框架 mvvm\r\n    //数据变化视图更新，视图变化数据会被影响（mvvm） 不能跳过数据去更新视图，$ref   \r\n\r\n    // 如果当前 有el 属性说明要渲染模块\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el)\r\n    }\r\n  }\r\n  //创建 $mount 方法\r\n  Vue.prototype.$mount = function (el) {\r\n    //进行挂载操作\r\n    const vm = this;\r\n    const options = vm.$options //\r\n    // console.log(el)\r\n    //获取元素\r\n    el = document.querySelector(el);\r\n    vm.$el = el\r\n    //现在我们就希望渲染页面\r\n    //1: 如果有render  渲染render\r\n    if (!options.render) { // 没有\r\n      let template = options.template\r\n      //1.1 需要判断有没有template\r\n      if (!template && el) {\r\n        //1.2 获取el 内容\r\n        //DOM接口的outerHTML属性获取描述元素（包括其后代）的序列化HTML片段。它也可以设置为用从给定字符串解析的节点替换元素。\r\n        //innerHTML 里面的元素\r\n        template = el.outerHTML\r\n      }\r\n      //  console.log(template)\r\n      //获取到元素(template模块)，将元素转换成render\r\n      const render = compileToFunction(template)\r\n      options.render = render\r\n    }\r\n    // console.log(options.render) // 渲染到页面的都是这个render方法\r\n    //需要挂载这个组件\r\n    mountComponent(vm, el)\r\n\r\n  }\r\n}","export function renderMixin(Vue) {\r\n    //在vue 上创建这些方法  _c,_v,_s 作用创建虚拟节点  用对象来描述dom\r\n    Vue.prototype._c = function () { //创建元素\r\n          return createElement(...arguments)\r\n    }\r\n    Vue.prototype._s = function (val) { // stringify  字符串\r\n        //注意值的类型\r\n        return val == null ? \"\" : (typeof val == 'object') ? JSON.stringify(val) :val\r\n    }\r\n    Vue.prototype._v = function (text) { // 创建虚拟文本元素\r\n        return createTextVnode(text)\r\n    }\r\n    Vue.prototype._render = function () {\r\n        //将 render函数编程虚拟节点\r\n        //获取render 函数\r\n        let vm = this\r\n        const render = vm.$options.render\r\n        //执行render 函数\r\n        let vnode = render.call(this)\r\n        // console.log(vnode) //展示生成的vnode,就描述的dom结构 好处\r\n        return vnode\r\n    }\r\n}\r\n\r\nfunction createElement(tag,data={},...children){\r\n     return vnode(tag,data,data.key,children)\r\n}\r\n\r\nfunction createTextVnode(text){\r\n   return vnode(undefined,undefined,undefined,undefined,text)\r\n}\r\n  //用来产生虚拟dom\r\nfunction vnode(tag,data,key,children,text){\r\n   return {\r\n       tag,\r\n       data,\r\n       key,\r\n       children,\r\n       text\r\n   }\r\n}","import { mergeOptions } from \"../utils/index\";\r\n\r\n export function initGlobalApi(Vue){\r\n     // 源码当中 你所有定义的全局方法都是 放在\r\n     // Vue.options = {} //Vue.component Vue.diretive\r\n     Vue.options = {}; // {created:[a,b,]}\r\n   Vue.mixin = function(mixin){\r\n      // console.log(mixin) \r\n      //实现合并 就是合并对象 （我先考虑生命周期）不考虑其他的合并 data,computed watch\r\n      this.options = mergeOptions(this.options,mixin)\r\n      //  console.log( Vue.options,99999)\r\n   }\r\n }\r\n\r\n//  options:{created:[a,b,vue1]}","import {\r\n  initMixin\r\n} from \"./init\";\r\nimport {\r\n  liftcycleMixin\r\n} from \"./liftcycle\";\r\nimport {\r\n  renderMixin\r\n} from \"./vnode/index\";\r\nimport {\r\n  initGlobalApi\r\n} from \"./global-api/index\";\r\nimport {\r\n  stateMixin\r\n} from './initState'\r\nimport {\r\n  compileToFunction\r\n} from './compiler/index'\r\nimport {\r\n  createELm,\r\n  patch\r\n} from './vnode/patch'\r\n\r\nfunction Vue(options) {\r\n  this._init(options)\r\n}\r\n//这些方法都是原型上的方法\r\ninitMixin(Vue) //给原型上添加一个  init 方法\r\nliftcycleMixin(Vue) //混合生命周期 渲染\r\nrenderMixin(Vue) // _render\r\nstateMixin(Vue) // 给 vm 添加  $nextTick\r\n//静态方法  ，也是全局方法  Vue.component .Vue.extend Vue.mixin ..\r\ninitGlobalApi(Vue);\r\n\r\n// 创建vnode\r\nlet vm1 = new Vue({\r\n  data: {\r\n    name: '张三'\r\n  }\r\n})\r\nlet render1 = compileToFunction(`<ul>\r\n    <li style=\"background:red\" key=\"c\">c</li>\r\n     <li style=\"background:pink\" key=\"b\">b</li>\r\n     <li style=\"background:blue\" key=\"a\">a</li>\r\n    </ul>`)\r\nlet vnode1 = render1.call(vm1)\r\ndocument.body.appendChild(createELm(vnode1))\r\n\r\n//数据更新\r\nlet vm2 = new Vue({\r\n  data: {\r\n    name: '李四'\r\n  }\r\n})\r\nlet render2 = compileToFunction(`<ul>\r\n     <li style=\"background:red\" key=\"f\">f</li>\r\n     <li style=\"background:pink\" key=\"g\">g</li>\r\n     <li style=\"background:pink\" key=\"b\">b</li>\r\n     <li style=\"background:blue\" key=\"e\">e</li>\r\n\r\n    </ul>`)\r\nlet vnode2 = render2.call(vm2)\r\n\r\nsetTimeout(() => {\r\n  patch(vnode1, vnode2)\r\n}, 2000)\r\n\r\n//  let vm1 = new Vue({data:{name:'张三'}})\r\n//  let render1 = compileToFunction(`<ul>\r\n//   <li style=\"background:red\" key=\"a\">a</li>\r\n//   <li style=\"background:pink\" key=\"b\">b</li>\r\n//   <li style=\"background:blue\" key=\"c\">c</li>\r\n//  </ul>`)\r\n//  let vnode1 = render1.call(vm1)\r\n//   document.body.appendChild(createELm(vnode1))\r\n\r\n// //数据更新\r\n//   let vm2 = new Vue({data:{name:'李四'}})\r\n//   let render2 = compileToFunction(`<ul>\r\n//   <li style=\"background:yellow\" key=\"d\">d</li>\r\n//   <li style=\"background:red\" key=\"a\">a</li>\r\n//   <li style=\"background:pink\" key=\"b\">b</li>\r\n//   <li style=\"background:blue\" key=\"c\">c</li>\r\n//  </ul>`)\r\n//   let vnode2 = render2.call(vm2)\r\n\r\n//   let vm1 = new Vue({data:{name:'张三'}})\r\n//   let render1 = compileToFunction(`<ul>\r\n//   <li style=\"background:yellow\" key=\"c\">我是黄色</li>\r\n//   </ul>`)\r\n//   let vnode1 = render1.call(vm1)\r\n//    document.body.appendChild(createELm(vnode1))\r\n\r\n//  //数据更新\r\n//    let vm2 = new Vue({data:{name:'李四'}})\r\n//    let render2 = compileToFunction(`<ul>\r\n//    <li style=\"background:blue\" key=\"c\">我是蓝色</li>\r\n//   </ul>`)\r\n//    let vnode2 = render2.call(vm2)\r\n\r\n//    //patch 比对\r\n\r\n\r\n//   //创建vnode\r\n//   let vm1 = new Vue({data:{name:'张三'}})\r\n//   let render1 = compileToFunction(`<a>{{name}}</a>`)\r\n//   let vnode1 = render1.call(vm1)\r\n//    document.body.appendChild(createELm(vnode1))\r\n\r\n//  //数据更新\r\n//    let vm2 = new Vue({data:{name:'李四'}})\r\n//    let render2 = compileToFunction(`<div>{{name}}</div>`)\r\n//    let vnode2 = render2.call(vm2)\r\n// //属性添加\r\n//    let vm3 = new Vue({data:{name:'李四'}})\r\n//    let render3 = compileToFunction(`<div style=\"color:red\">{{name}}</div>`)\r\n//    let vnode3 = render3.call(vm3)\r\n\r\n//    //patch 比对\r\n//     setTimeout(()=>{\r\n//       patch(vnode1,vnode2)\r\n//     },2000)\r\n\r\n//     setTimeout(()=>{\r\n//       patch(vnode2,vnode3)\r\n//     },3000)\r\n\r\nexport default Vue"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","item","_len","arguments","length","args","_key","result","apply","inserted","splice","ob","__ob__","obserArray","dep","notify","id","Dep","_classCallCheck","subs","_createClass","key","value","depend","targer","addDep","addSub","watcher","push","updata","pushTarget","popTarget","observe","defineProperty","enumerable","configurable","isArray","__proto__","walk","Observer","data","keys","defineReactive","chilidDep","get","set","newValue","_typeof","callback","pending","flush","cb","timerFunc","Promise","resolve","then","MutationObserver","textNode","document","createTextNode","characterData","textContent","setImmediate","nextTick","Watcher","vm","exprOrfn","options","user","deps","depsId","Set","getter","path","split","obj","i","has","add","run","oldValue","call","queueWatcher","queue","flushWatcher","initState","opts","$options","initData","watch","initWatch","props","computed","proxy","_data","console","log","_loop","handler","createrWatcher","$watch","stateMixin","$nextTick","Vue","undefined","_objectSpread","immediate","ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","createASTELement","tagName","attrs","tag","type","children","parent","root","currentParent","stack","start","element","end","pop","chars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","_item$split","_item$split2","_slicedToArray","JSON","stringify","slice","genChildren","el","map","child","gen","join","node","generate","test","tokens","lastIndex","exec","index","trim","code","compileToFunction","template","ast","render","Function","patch","oldVnode","Vnode","nodeType","createELm","parentElm","parentNode","insertBefore","nextSibling","removeChild","replaceChild","updataRpors","oldChildren","newChildren","updataChild","innerHTML","appendChild","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeIndexBykey","isSomeVnode","moveIndex","moveVnode","oldContext","newContext","vnode","oldProps","newProps","removeAttribute","newStyle","style","oldStyle","styleName","className","setAttribute","createElement","mountComponent","callHook","updataComponent","_updata","_render","liftcycleMixin","prevVnode","_vnode","$el","hook","handlers","HOOKS","strats","parentVal","childVal","mergeHook","hooks","mergeOptions","mergeField","hasOwnProperty","initMixin","_init","$mount","querySelector","outerHTML","renderMixin","_c","_s","val","_v","createTextVnode","initGlobalApi","mixin","vm1","render1","vnode1","body","vm2","render2","vnode2","setTimeout"],"mappings":"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"}