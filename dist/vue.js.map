{"version":3,"file":"vue.js","sources":["../src/compile/generate.js","../src/compile/parseAst.js","../src/compile/index.js","../src/observe/arr.js","../src/observe/index.js","../src/initState.js","../src/vnode/patch.js","../src/lifecycle.js","../src/init.js","../src/vnode/index.js","../src/index.js"],"sourcesContent":["/**\r\n * <div id=\"app\">Hello{{msg}}</div>\r\n * \r\n * _c 解析标签\r\n * _v 解析字符串\r\n * \r\n * render(){\r\n *  return _c('div',{id:app},_v('hello'+_s(msg)),_c)\r\n * }\r\n *  \r\n */\r\n//处理属性\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n//genPorps()方法解析属性\r\nfunction genPorps(attrs) {\r\n    // console.log(attrs)\r\n    let str = '';\r\n    //对象\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        if (attr.name === 'style') { // \r\n            let obj = {}\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, val] = item.split(':')\r\n                // console.log(key, val, \"//this is [key,val]\")\r\n                obj[key] = val\r\n            })\r\n            attr.value = obj\r\n        }\r\n        //拼接\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n        // console.log(str, '|this is str')\r\n        // console.log(`{${str.slice(0,-1)}}`)\r\n    }\r\n    //首字符到倒数第二个字符,即去掉标点符号\r\n    return `{${str.slice(0,-1)}}`\r\n}\r\n\r\n//处理子节点\r\nfunction genChildren(el) {\r\n    let children = el.children //获取元素节点的子节点\r\n    //如果存在子节点，则递归调用 gen() 函数处理每个子节点，并用逗号拼接子节点的代码。\r\n    if (children) {\r\n        //返回子节点代码的字符串。\r\n        return children.map(child => gen(child)).join(',')\r\n    }\r\n}\r\n//\r\nfunction gen(node) { //1.元素  2.div  tip:_v表示文本\r\n    // console.log(node, \"this is node\")\r\n    //如果节点是元素节点，递归调用 generate() 函数处理该节点，并返回结果。\r\n    if (node.type === 1) {\r\n        return generate(node)\r\n    } else { //文本 \r\n        //(1) 只是文本 hello  (2){{}}\r\n        let text = node.text //获取文本\r\n        //转化\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        }\r\n        //(2)带插值表达式{{}}\r\n        //文本包含插值表达式，使用正则表达式 defaultTagRE \r\n        //查找所有 {{}} 形式的插值表达式，并解析成可执行的代码片段。\r\n        let tokens = []\r\n        //lastIndex 需要清零 否则test匹配会失败\r\n        let lastindex = defaultTagRE.lastIndex = 0\r\n        //match保存获取结果\r\n        let match\r\n        while (match = defaultTagRE.exec(text)) {\r\n            console.log(match, \"|this is match\")\r\n            let index = match.index\r\n            if (index > lastindex) {\r\n                tokens.push(JSON.stringify(text.slice(lastindex, index))) //内容\r\n            }\r\n            tokens.push(`_s(${match[1].trim()})`)\r\n            //lastindex处理文本长度\r\n            lastindex = index + match[0].length\r\n        }\r\n        //此处if用于处理`Hello{{msg}} xxx`中的xxx\r\n        if (lastindex < text.slice(lastindex)) {\r\n            tokens.push(JSON.stringify(text.slice(lastindex, index))) //内容\r\n        }\r\n        return `_v(${tokens.join('+')})`\r\n    }\r\n}\r\n\r\nexport function generate(el) {\r\n    console.log(el,'|this is el')\r\n    let children = genChildren(el)\r\n    console.log(children, \"|this is children\")\r\n    let code = `_c('${el.tag}',${el.attrs.length?`${genPorps(el.attrs)}`:'undefined'},${\r\n        children?`${children}`:''\r\n    })`\r\n    console.log(code, '|this is code')\r\n    return code\r\n}","//ast语法树 {}    vnode {}\r\n\r\n/**\r\n * {\r\n * tag:'div'\r\n * attrs:[{id:\"app\"}]\r\n * children:[{}]\r\n * }\r\n * \r\n * \r\n * \r\n */\r\n\r\n//将真实节点变为ast语法树\r\n\r\n//遍历\r\n//从源码处偷过来的正则表达式\r\nconst attribute =\r\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\n//属性 例如:  {id=app}\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; //标签名称\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})` //<span:xx>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) //标签开头\r\nconst startTagClose = /^\\s*(\\/?)>/ //匹配结束标签 的 >\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) //结束标签 例如</div>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\nlet root; //根元素\r\nlet createParent //当前元素的父亲\r\nlet stack = [] \r\nfunction createASTElement(tag, attrs) {\r\n    return {\r\n        tag,\r\n        attrs,\r\n        children: [],\r\n        type: 1,\r\n        parent: null\r\n    }\r\n}\r\n\r\nfunction start(tag, attrs) { //开始标签\r\n    let element = createASTElement(tag, attrs) //生成一个开始标签元素\r\n    //查看root根元素是否为空\r\n    //若是,将该元素作为根\r\n    //非原则\r\n    if (!root) {\r\n        root = element\r\n    }\r\n    createParent = element\r\n    stack.push(element)\r\n    // console.log(tag, attrs, '开始的标签')\r\n}\r\n\r\nfunction charts(text) { //获取文本\r\n    // console.log(text, '文本')\r\n    // text = text.replace(/a/g,'')\r\n    if(text){\r\n        createParent.children.push({\r\n            type:3,\r\n            text\r\n        })\r\n    }\r\n    // console.log(stack,'stack')\r\n}\r\n\r\nfunction end(tag) { //结束的标签\r\n    let element = stack.pop()\r\n    createParent = stack[stack.length - 1]\r\n    if (createParent) { //元素闭合\r\n        element.parent = createParent.tag\r\n        createParent.children.push(element)\r\n    }\r\n    // console.log(tag, '结束标签')\r\n}\r\n\r\nexport function parseHTML(html) {\r\n    while (html) { //html 为空时,结束\r\n        //判断标签 <>\r\n        let textEnd = html.indexOf('<') //0\r\n        // console.log(html,textEnd,'this is textEnd')\r\n        if (textEnd === 0) { //标签\r\n            // (1) 开始标签\r\n            const startTagMatch = parseStartTag() //开始标签的内容{}\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            // console.log(endTagMatch, '结束标签')\r\n            //结束标签\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n        }\r\n        let text\r\n        //文本\r\n        if (textEnd > 0) {\r\n            // console.log(textEnd)\r\n            //获取文本内容\r\n            text = html.substring(0, textEnd)\r\n            // console.log(text)\r\n        }\r\n        if (text) {\r\n            advance(text.length)\r\n            charts(text)\r\n            // console.log(html)\r\n        }\r\n    }\r\n    function parseStartTag() {\r\n        //\r\n        const start = html.match(startTagOpen) // 1结果 2false\r\n        // console.log(start,'this is start')\r\n        // match() 方法检索字符串与正则表达式进行匹配的结果\r\n        // console.log(start)\r\n        //创建ast 语法树\r\n        if (start) {\r\n            let match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            // console.log(match,'match match')\r\n            //删除 开始标签\r\n            advance(start[0].length)\r\n            //属性\r\n            //注意 多个 遍历\r\n            //注意>\r\n            let attr //属性 \r\n            let end //结束标签\r\n            //attr=html.match(attribute)用于匹配\r\n            //非结束位'>',且有属性存在\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // console.log(attr,'attr attr'); //{}\r\n                // console.log(end,'end end')\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5]\r\n                })\r\n                advance(attr[0].length)\r\n                //匹配完后,就进行删除操作\r\n            }\r\n            //end里面有东西了(只能是有\">\"),那么将其删除\r\n            if (end) {\r\n                // console.log(end)\r\n                advance(end[0].length)\r\n                return match\r\n            }\r\n        }\r\n    }\r\n    function advance(n) {\r\n        // console.log(html)\r\n        // console.log(n)\r\n        html = html.substring(n)\r\n        // substring() 方法返回一个字符串在开始索引到结束索引之间的一个子集，\r\n        // 或从开始索引直到字符串的末尾的一个子集。\r\n        // console.log(html)\r\n    }\r\n    // console.log(root)\r\n    return root \r\n}","import { generate } from \"./generate\"\r\nimport { parseHTML } from \"./parseAst\"\r\n\r\nexport function compileToFunction(el) {\r\n\r\n    //1. 将html元素变为ast语法树\r\n    let ast = parseHTML(el)\r\n    //2. ast语法树变成render函数\r\n    //(1) ast语法树变成字符串\r\n    //(2) 字符串变成函数\r\n    let code = generate(ast) // _c _v _s\r\n    console.log(code)\r\n    //3.将render字符串变成函数\r\n    let render = new Function(`with(this){return ${code}}`)\r\n    console.log(render,'this is render')\r\n    return render\r\n}\r\n\r\n/**\r\n * <div id=\"app\">Hello{{msg}}</div>\r\n * \r\n * _c 解析标签\r\n * _v 解析字符串\r\n * \r\n * render(){\r\n *  return _c('div',{id:app},_v('hello'+_s(msg)),_c)\r\n * }\r\n *  \r\n */ ","let oldArrayProtoMethods = Array.prototype\r\n\r\nexport let ArrayMethods = Object.create(oldArrayProtoMethods)\r\n\r\nlet methods = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"unshift\",\r\n    \"shift\",\r\n    \"splice\"\r\n]\r\n\r\nmethods.forEach(item => {\r\n    ArrayMethods[item] = function (...args) {\r\n        // console.log(args)\r\n        let result = oldArrayProtoMethods[item].apply(this, args)\r\n        console.log(args) //[{b:6}]\r\n        //问题:数组追加对象的情况\r\n        let inserted;\r\n        switch (item) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':\r\n                inserted = args.splice(2);\r\n                break;\r\n        }\r\n        console.log(inserted)\r\n        let ob = this.__ob__ //\r\n        if (inserted) {\r\n            ob.observeArray(inserted)\r\n            //对添加的对象进行劫持\r\n        }\r\n        return result\r\n    }\r\n})\r\n\r\n// 当我们调用该方法时，可以传入多个参数，并且这些参数将会被传递给 oldArrayProtoMethods[item] 中对应的方法进行处理。让我们以一个简单的例子来说明这个过程：\r\n\r\n// 假设 methods 数组中有一个元素为 'push'，即 methods = ['push']。代码会将 push 方法添加到 ArrayMethods 对象中，并创建一个相应的函数，这个函数实际上是 oldArrayProtoMethods.push 的包装函数。\r\n\r\n// 当我们调用 ArrayMethods.push(1, 2, 3) 时，这里的参数 1, 2, 3 将会作为 args 的值，被传递给这个函数。在函数中，我们可以通过 console.log(args) 来打印参数，这将会输出 [1, 2, 3]。\r\n\r\n// 接下来，我们调用 oldArrayProtoMethods.push.apply(this, args)，这里的 this 表示当前的上下文。apply 方法将会把 args 数组解包成独立的参数，并传递给 oldArrayProtoMethods.push 方法。因此，我们实际上是调用了 oldArrayProtoMethods.push(1, 2, 3)。\r\n\r\n// 最后，在包装函数中，将会返回 oldArrayProtoMethods.push 方法的返回值。\r\n\r\n// 所以，args 的作用是接收传入的参数，并将其传递给原始方法进行处理。这样就实现了在调用 ArrayMethods 对象的方法时，会先将参数打印出来，并将这些参数传递给原始的方法进行处理的功能。","import {\r\n    ArrayMethods\r\n} from \"./arr\"\r\nexport function observer(data) {\r\n    // console.log(data)\r\n\r\n    //判断数据\r\n    if (typeof data != 'object' || data == null) {\r\n        return data\r\n    }\r\n    //对象通过一个类\r\n    return new Observer(data)\r\n}\r\n\r\nclass Observer {\r\n    constructor(value) {\r\n        Object.defineProperty(value, \"__ob__\", {\r\n            enumerable: false,\r\n            value: this\r\n        })\r\n        //判断数据\r\n        // console.log(value)\r\n        if (Array.isArray(value)) {\r\n            value.__proto__ = ArrayMethods\r\n            // console.log(\"shuzhu\")\r\n            //如果你是数组对象\r\n            this.observeArray(value)\r\n        } else {\r\n            this.walk(value)\r\n        }\r\n    }\r\n    walk(data) {\r\n        let keys = Object.keys(data)\r\n        for (let i = 0; i < keys.length; i++) {\r\n\r\n            //对象我们的每个属性进行劫持\r\n            let key = keys[i]\r\n            let value = data[key]\r\n            defineReactive(data, key, value)\r\n        }\r\n\r\n    }\r\n    observeArray(value) { //[{a:1}]\r\n        for (let i = 0; i < value.length; i++) {\r\n            observer(value[i])\r\n        }\r\n    }\r\n}\r\n//对对象中的属性进行劫持\r\nfunction defineReactive(data, key, value) {\r\n    observer(value) //深度代理\r\n    Object.defineProperty(data, key, {\r\n        get() {\r\n            // console.log('获取')\r\n            return value\r\n        },\r\n        set(newValue) {\r\n            // console.log('设置')\r\n            if (newValue == value) {\r\n                return;\r\n            }\r\n            observer(newValue)\r\n            value = newValue\r\n        }\r\n    })\r\n\r\n}\r\n\r\n//vue2   Object.defineProperty 缺点 对象中的一个属性\r\n\r\n//{a:{}},list[]}\r\n\r\n//数组{list:[1,2,3],arr:[{a:1}]}\r\n//ipo切片思想 \r\n// 方法函数劫持,重写数组方法 arr.push()\r\n","import { observer } from \"./observe/index.js\"\r\nexport function initState(vm){\r\n    let opts = vm.$options\r\n    // console.log(opts)\r\n    //判断\r\n    if(opts.props){\r\n        initProps()\r\n    }\r\n    if(opts.data){\r\n        initData(vm)\r\n    }\r\n    if(opts.watch){\r\n        initWatch()\r\n    }\r\n    if(opts.computed){\r\n        initComputed()\r\n    }\r\n    if(opts.methods){\r\n        initMethods()\r\n    }\r\n}\r\n\r\nfunction initComputed(){}\r\nfunction initMethods(){}\r\nfunction initProps(){}\r\nfunction initWatch(){}\r\n\r\n//vue2 对data初始化\r\nfunction initData(vm){\r\n    // console.log('data初始化') //两种情况 (1)对象 (2)函数\r\n    let data = vm.$options.data\r\n    data = vm._data =typeof data ===\"function\"?data.call(vm):data\r\n    //data数据进行劫持\r\n    //将data上的所有属性代理到实例上{a:1,b:2}\r\n    // for(let i=0;i<data.length;i++){\r\n    //     proxy(vm,\"_data\",data[i])\r\n    // }\r\n    // 另一种写法\r\n    for(let key in data){\r\n        proxy(vm,\"_data\",key)\r\n    }\r\n    observer(data)\r\n}\r\n\r\nfunction proxy(vm,source,key){\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[source][key]\r\n        },\r\n        set(newValue){\r\n            vm[source][key] =newValue;\r\n        }\r\n    })\r\n}\r\n    //data{} (1)对象(2)数组 { a:{b:1},list:[1,2,3],arr:[{}]]}","export function patch(oldVnode,vnode){\r\n    console.log(oldVnode,vnode)\r\n    //(1) 创建新DOM\r\n    let el = createEl(vnode)\r\n    console.log(el)\r\n    //(2) 替换 1) 获取父节点  2)插入 3)删除\r\n    let parentEL = oldVnode.parentNode\r\n    parentEL.insertBefore(el,oldVnode.nextsibling)\r\n    parentEL.removeChild(oldVnode)\r\n    return el\r\n}\r\n\r\nfunction createEl(vnode){\r\n    let {tag,data,key,children,text} = vnode\r\n    if(typeof tag === 'string'){\r\n        vnode.el = document.createElement(tag)\r\n        if(children.length >0){\r\n            children.forEach(child => {\r\n                //递归\r\n                vnode.el.appendChild(createEl(child))\r\n            });\r\n        }\r\n    }else{\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}","import { patch } from \"./vnode/patch\"\r\n\r\nexport function mounetComponent(vm,el){\r\n    //源码\r\n    vm._updata(vm._render())\r\n    //(1)vm._render() 将 render函数变成vnode\r\n    //(2)vm.updata()将vnode变成真实dom\r\n}\r\n\r\nexport function lifecycleMixin(Vue){\r\n    Vue.prototype._updata =function(vnode){\r\n        console.log(vnode)\r\n        let vm = this\r\n        //两个参数 ()\r\n        vm.$el = patch(vm.$el,vnode)\r\n    }\r\n}\r\n\r\n//(1) render()函数 =>vnode =>真实dom ","import {\r\n    compileToFunction\r\n} from \"./compile/index.js\";\r\nimport {\r\n    initState\r\n} from \"./initState\";\r\nimport {\r\n    mounetComponent\r\n} from './lifecycle'\r\n\r\n\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        // console.log(options)\r\n        let vm = this\r\n        //options为\r\n        vm.$options = options\r\n        //初始化状态\r\n        initState(vm)\r\n\r\n        // 渲染模板 el\r\n        if (vm.$options.el) {\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n    //创建 $mount\r\n\r\n    Vue.prototype.$mount = function (el) {\r\n        // console.log(el)\r\n        //el template render\r\n        let vm = this\r\n        el = document.querySelector(el) //获取元素\r\n        vm.$el = el\r\n        let options = vm.$options\r\n        if (!options.render) { //没有\r\n            let template = options.template\r\n            if (!template && el) {\r\n                //获取html\r\n                el = el.outerHTML\r\n                // console.log(el,'this is init.js attrs:el')\r\n                //<div id=\"app\">Hello</div>\r\n                //变成ast语法树\r\n                let render = compileToFunction(el)\r\n                console.log(render)\r\n                //(1)render函数变为 vnode (2)vnode变成真实DOM放到页面上去\r\n                options.render = render\r\n                //\r\n\r\n            }\r\n        }\r\n        //挂载组件\r\n        mounetComponent(vm, el)\r\n    }\r\n\r\n}\r\n\r\n//ast语法树 {}    vnode {}\r\n//<div id=\"app\">Hello{{msg}}</div>\r\n/**\r\n * {\r\n * tag:'div'\r\n * attrs:[{id:\"app\"}]\r\n * children:[{tag:null,text:Hello},{tag:'div'}]\r\n * }\r\n * \r\n * \r\n * \r\n */","export function renderMixin(Vue) {\r\n    Vue.prototype._c = function () {\r\n        //创建标签\r\n        return createElement(...arguments)\r\n    }\r\n    Vue.prototype._v = function (text) { //文本\r\n        return createText(text)\r\n    }\r\n    Vue.prototype._s = function (val) {\r\n        return val == null?\"\":(typeof val ==='object')?JSON.stringify(val):val\r\n    }\r\n    Vue.prototype._render = function () { //render函数变成 vnode\r\n        let vm = this\r\n        let render = vm.$options.render\r\n        let vnode = render.call(this)\r\n        // console.log(vnode)\r\n        return vnode\r\n    }\r\n}\r\n//vnode只可以描述节点\r\n\r\n//创建元素\r\nfunction createElement(tag,data={},...children){\r\n    return vnode(tag,data,data.key,children)\r\n}\r\n//创建文本\r\nfunction createText(text){\r\n    return vnode(undefined,undefined,undefined,undefined,text)\r\n}\r\n//创建vnode\r\nfunction vnode(tag,data,key,children,text){\r\n    return {\r\n        tag,\r\n        data,\r\n        key,\r\n        children,\r\n        text\r\n    }\r\n}","import {initMixin} from \"./init\"\r\nimport { lifecycleMixin } from \"./lifecycle\"\r\nimport { renderMixin } from \"./vnode/index\"\r\n\r\nfunction Vue(options) {\r\n    // console.log(options)\r\n    //初始化\r\n    this._init(options)\r\n}\r\ninitMixin(Vue)\r\nlifecycleMixin(Vue)  //添加生命周期\r\nrenderMixin(Vue) //添加_render\r\nexport default Vue"],"names":["defaultTagRE","genPorps","attrs","str","_loop","attr","i","name","obj","value","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","val","concat","JSON","stringify","length","slice","genChildren","el","children","map","child","gen","join","node","type","generate","text","test","tokens","lastindex","lastIndex","match","exec","console","log","index","push","trim","code","tag","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","root","createParent","stack","createASTElement","parent","start","element","charts","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","tagName","endTagMatch","advance","substring","n","compileToFunction","ast","render","Function","oldArrayProtoMethods","Array","prototype","ArrayMethods","Object","create","methods","_len","arguments","args","_key","result","apply","inserted","splice","ob","__ob__","observeArray","observer","data","_typeof","Observer","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","keys","defineReactive","get","set","newValue","initState","vm","opts","$options","props","initData","watch","computed","_data","call","proxy","source","patch","oldVnode","vnode","createEl","parentEL","parentNode","insertBefore","nextsibling","removeChild","document","createElement","appendChild","createTextNode","mounetComponent","_updata","_render","lifecycleMixin","Vue","$el","initMixin","_init","options","$mount","querySelector","template","outerHTML","renderMixin","_c","_v","createText","_s","undefined"],"mappings":"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"}