{"version":3,"file":"vue.js","sources":["../src/compile/index.js","../src/observe/arr.js","../src/observe/index.js","../src/initState.js","../src/init.js","../src/index.js"],"sourcesContent":["//ast语法树 {}    vnode {}\r\n\r\n/**\r\n * {\r\n * tag:'div'\r\n * attrs:[{id:\"app\"}]\r\n * children:[{}]\r\n * }\r\n * \r\n * \r\n * \r\n */\r\n\r\n//将真实节点变为ast语法树\r\n\r\n//遍历\r\n//从源码处偷过来的正则表达式\r\nconst attribute =\r\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\n//属性 例如:  {id=app}\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; //标签名称\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})` //<span:xx>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) //标签开头\r\nconst startTagClose = /^\\s*(\\/?)>/ //匹配结束标签 的 >\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) //结束标签 例如</div>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\nlet root; //根元素\r\nlet createParent //当前元素的父亲\r\n//数据结构 栈\r\nlet stack = [] //\r\nfunction createASTElement(tag, attrs) {\r\n    return {\r\n        tag,\r\n        attrs,\r\n        children: [],\r\n        type: 1,\r\n        parent: null\r\n    }\r\n}\r\n\r\nfunction start(tag, attrs) { //开始标签\r\n    let element = createASTElement(tag, attrs)\r\n    if (!root) {\r\n        root = element\r\n    }\r\n    createParent = element\r\n    stack.push(element)\r\n    // console.log(tag, attrs, '开始的标签')\r\n}\r\n\r\nfunction charts(text) { //获取文本\r\n    // console.log(text, '文本')\r\n    text = text.replace(/s/g,'')\r\n    if(text){\r\n        createParent.children.push({\r\n            type:3,\r\n            text\r\n        })\r\n    }\r\n}\r\n\r\nfunction end(tag) { //结束的标签\r\n    let element = stack.pop()\r\n    createParent = stack[stack.length - 1]\r\n    if (createParent) { //元素闭合\r\n        element.parent = createParent.tag\r\n        createParent.children.push(element)\r\n    }\r\n    // console.log(tag, '结束标签')\r\n}\r\n\r\nfunction parseHTML(html) {\r\n    while (html) { //html 为空时结束符\r\n        //判断标签 <>\r\n        let textEnd = html.indexOf('<') //0\r\n        console.log(html,textEnd,'this is textEnd')\r\n        if (textEnd === 0) { //标签\r\n            // (1) 开始标签\r\n            const startTagMatch = parseStartTag() //开始标签的内容{}\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            // console.log(endTagMatch, '结束标签')\r\n            //结束标签\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n        }\r\n        let text\r\n        //文本\r\n        if (textEnd > 0) {\r\n            // console.log(textEnd)\r\n            //获取文本内容\r\n            text = html.substring(0, textEnd)\r\n            // console.log(text)\r\n        }\r\n        if (text) {\r\n            advance(text.length)\r\n            charts(text)\r\n            // console.log(html)\r\n        }\r\n    }\r\n\r\n    function parseStartTag() {\r\n        //\r\n        const start = html.match(startTagOpen) // 1结果 2false\r\n        console.log(start,'this is start')\r\n        // match() 方法检索字符串与正则表达式进行匹配的结果\r\n        // console.log(start)\r\n        //创建ast 语法树\r\n        if (start) {\r\n            let match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            console.log(match,'match match')\r\n            //删除 开始标签\r\n            advance(start[0].length)\r\n            //属性\r\n            //注意 多个 遍历\r\n            //注意>\r\n            let attr //属性 \r\n            let end //结束标签\r\n            //attr=html.match(attribute)用于匹配\r\n            //非结束位'>',且有属性存在\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // console.log(attr,'attr attr'); //{}\r\n                // console.log(end,'end end')\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5]\r\n                })\r\n                advance(attr[0].length)\r\n                //匹配完后,就进行删除操作\r\n            }\r\n            //end里面有东西了(只能是有\">\"),那么将其删除\r\n            if (end) {\r\n                // console.log(end)\r\n                advance(end[0].length)\r\n                return match\r\n            }\r\n        }\r\n    }\r\n\r\n    function advance(n) {\r\n        // console.log(html)\r\n        // console.log(n)\r\n\r\n        html = html.substring(n)\r\n        // substring() 方法返回一个字符串在开始索引到结束索引之间的一个子集，\r\n        // 或从开始索引直到字符串的末尾的一个子集。\r\n        // console.log(html)\r\n    }\r\n    console.log(root)\r\n    return root \r\n}\r\nexport function compileToFunction(el) {\r\n    // console.log(el)\r\n    let ast = parseHTML(el)\r\n    console.log(ast,'ast ast')\r\n}","let oldArrayProtoMethods = Array.prototype\r\n\r\nexport let ArrayMethods = Object.create(oldArrayProtoMethods)\r\n\r\nlet methods = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"unshift\",\r\n    \"shift\",\r\n    \"splice\"\r\n]\r\n\r\nmethods.forEach(item => {\r\n    ArrayMethods[item] = function (...args) {\r\n        // console.log(args)\r\n        let result = oldArrayProtoMethods[item].apply(this, args)\r\n        console.log(args) //[{b:6}]\r\n        //问题:数组追加对象的情况\r\n        let inserted;\r\n        switch (item) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':\r\n                inserted = args.splice(2);\r\n                break;\r\n        }\r\n        console.log(inserted)\r\n        let ob = this.__ob__ //\r\n        if (inserted) {\r\n            ob.observeArray(inserted)\r\n            //对添加的对象进行劫持\r\n        }\r\n        return result\r\n    }\r\n})\r\n\r\n// 当我们调用该方法时，可以传入多个参数，并且这些参数将会被传递给 oldArrayProtoMethods[item] 中对应的方法进行处理。让我们以一个简单的例子来说明这个过程：\r\n\r\n// 假设 methods 数组中有一个元素为 'push'，即 methods = ['push']。代码会将 push 方法添加到 ArrayMethods 对象中，并创建一个相应的函数，这个函数实际上是 oldArrayProtoMethods.push 的包装函数。\r\n\r\n// 当我们调用 ArrayMethods.push(1, 2, 3) 时，这里的参数 1, 2, 3 将会作为 args 的值，被传递给这个函数。在函数中，我们可以通过 console.log(args) 来打印参数，这将会输出 [1, 2, 3]。\r\n\r\n// 接下来，我们调用 oldArrayProtoMethods.push.apply(this, args)，这里的 this 表示当前的上下文。apply 方法将会把 args 数组解包成独立的参数，并传递给 oldArrayProtoMethods.push 方法。因此，我们实际上是调用了 oldArrayProtoMethods.push(1, 2, 3)。\r\n\r\n// 最后，在包装函数中，将会返回 oldArrayProtoMethods.push 方法的返回值。\r\n\r\n// 所以，args 的作用是接收传入的参数，并将其传递给原始方法进行处理。这样就实现了在调用 ArrayMethods 对象的方法时，会先将参数打印出来，并将这些参数传递给原始的方法进行处理的功能。","import {\r\n    ArrayMethods\r\n} from \"./arr\"\r\nexport function observer(data) {\r\n    // console.log(data)\r\n\r\n    //判断数据\r\n    if (typeof data != 'object' || data == null) {\r\n        return data\r\n    }\r\n    //对象通过一个类\r\n    return new Observer(data)\r\n}\r\n\r\nclass Observer {\r\n    constructor(value) {\r\n        Object.defineProperty(value, \"__ob__\", {\r\n            enumerable: false,\r\n            value: this\r\n        })\r\n        //判断数据\r\n        // console.log(value)\r\n        if (Array.isArray(value)) {\r\n            value.__proto__ = ArrayMethods\r\n            // console.log(\"shuzhu\")\r\n            //如果你是数组对象\r\n            this.observeArray(value)\r\n        } else {\r\n            this.walk(value)\r\n        }\r\n    }\r\n    walk(data) {\r\n        let keys = Object.keys(data)\r\n        for (let i = 0; i < keys.length; i++) {\r\n\r\n            //对象我们的每个属性进行劫持\r\n            let key = keys[i]\r\n            let value = data[key]\r\n            defineReactive(data, key, value)\r\n        }\r\n\r\n    }\r\n    observeArray(value) { //[{a:1}]\r\n        for (let i = 0; i < value.length; i++) {\r\n            observer(value[i])\r\n        }\r\n    }\r\n}\r\n//对对象中的属性进行劫持\r\nfunction defineReactive(data, key, value) {\r\n    observer(value) //深度代理\r\n    Object.defineProperty(data, key, {\r\n        get() {\r\n            // console.log('获取')\r\n            return value\r\n        },\r\n        set(newValue) {\r\n            // console.log('设置')\r\n            if (newValue == value) {\r\n                return;\r\n            }\r\n            observer(newValue)\r\n            value = newValue\r\n        }\r\n    })\r\n\r\n}\r\n\r\n//vue2   Object.defineProperty 缺点 对象中的一个属性\r\n\r\n//{a:{}},list[]}\r\n\r\n//数组{list:[1,2,3],arr:[{a:1}]}\r\n//ipo切片思想 \r\n// 方法函数劫持,重写数组方法 arr.push()\r\n","import { observer } from \"./observe/index.js\"\r\nexport function initState(vm){\r\n    let opts = vm.$options\r\n    // console.log(opts)\r\n    //判断\r\n    if(opts.props){\r\n        initProps()\r\n    }\r\n    if(opts.data){\r\n        initData(vm)\r\n    }\r\n    if(opts.watch){\r\n        initWatch()\r\n    }\r\n    if(opts.computed){\r\n        initComputed()\r\n    }\r\n    if(opts.methods){\r\n        initMethods()\r\n    }\r\n}\r\n\r\nfunction initComputed(){}\r\nfunction initMethods(){}\r\nfunction initProps(){}\r\nfunction initWatch(){}\r\n\r\n//vue2 对data初始化\r\nfunction initData(vm){\r\n    // console.log('data初始化') //两种情况 (1)对象 (2)函数\r\n    let data = vm.$options.data\r\n    data = vm._data =typeof data ===\"function\"?data.call(vm):data\r\n    //data数据进行劫持\r\n    //将data上的所有属性代理到实例上{a:1,b:2}\r\n    // for(let i=0;i<data.length;i++){\r\n    //     proxy(vm,\"_data\",data[i])\r\n    // }\r\n    // 另一种写法\r\n    for(let key in data){\r\n        proxy(vm,\"_data\",key)\r\n    }\r\n    observer(data)\r\n}\r\n\r\nfunction proxy(vm,source,key){\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[source][key]\r\n        },\r\n        set(newValue){\r\n            vm[source][key] =newValue;\r\n        }\r\n    })\r\n}\r\n    //data{} (1)对象(2)数组 { a:{b:1},list:[1,2,3],arr:[{}]]}","import { compileToFunction } from \"./compile/index.js\";\r\nimport {\r\n    initState\r\n} from \"./initState\";\r\n\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        // console.log(options)\r\n        let vm = this\r\n        //options为\r\n        vm.$options = options\r\n        //初始化状态\r\n        initState(vm)\r\n\r\n        // 渲染模板 el\r\n        if (vm.$options.el) {\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n    //创建 $mount\r\n\r\n    Vue.prototype.$mount = function (el) {\r\n        // console.log(el)\r\n        //el template render\r\n        let vm = this\r\n        el = document.querySelector(el) //获取元素\r\n        let options = vm.$options\r\n        if (!options.render) { //没有\r\n            let template = options.template\r\n            if (!template && el) {\r\n                //获取html\r\n                el = el.outerHTML\r\n                console.log(el,'this is init.js attrs:el')\r\n                //<div id=\"app\">Hello</div>\r\n                //变成ast语法树\r\n                let ast = compileToFunction(el)\r\n                console.log(ast,'this is ast')\r\n                //render()\r\n\r\n                //\r\n\r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n//ast语法树 {}    vnode {}\r\n//<div id=\"app\">Hello{{msg}}</div>\r\n/**\r\n * {\r\n * tag:'div'\r\n * attrs:[{id:\"app\"}]\r\n * children:[{tag:null,text:Hello},{tag:'div'}]\r\n * }\r\n * \r\n * \r\n * \r\n*/","import {initMixin} from \"./init\"\r\n\r\nfunction Vue(options) {\r\n    // console.log(options)\r\n    //初始化\r\n    this._init(options)\r\n}\r\ninitMixin(Vue)\r\nexport default Vue"],"names":["attribute","ncname","qnameCapture","concat","startTagOpen","RegExp","startTagClose","endTag","root","createParent","stack","createASTElement","tag","attrs","children","type","parent","start","element","push","charts","text","replace","end","pop","length","parseHTML","html","textEnd","indexOf","console","log","startTagMatch","parseStartTag","tagName","endTagMatch","match","advance","substring","attr","name","value","n","compileToFunction","el","ast","oldArrayProtoMethods","Array","prototype","ArrayMethods","Object","create","methods","forEach","item","_len","arguments","args","_key","result","apply","inserted","splice","ob","__ob__","observeArray","observer","data","_typeof","Observer","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","key","keys","i","defineReactive","get","set","newValue","initState","vm","opts","$options","props","initData","watch","computed","_data","call","proxy","source","initMixin","Vue","_init","options","$mount","document","querySelector","render","template","outerHTML"],"mappings":"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"}